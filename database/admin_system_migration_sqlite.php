<?php
/**
 * AlingAi Pro 5.0 - AdminÁ≥ªÁªüSQLiteÊï∞ÊçÆÂ∫ìËøÅÁßª
 * ÁÆÄÂåñÁâàÊú¨ÔºåÁî®‰∫éÊºîÁ§∫ÂíåÂºÄÂèë
 */

try {
    echo "üöÄ ÂºÄÂßãAdminÁ≥ªÁªüSQLiteÊï∞ÊçÆÂ∫ìËøÅÁßª...\n\n";
    
    $dbPath = __DIR__ . '/admin_system.db';
    $pdo = new PDO("sqlite:$dbPath", null, null, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
    ]);
    
    echo "üìÇ ‰ΩøÁî®SQLiteÊï∞ÊçÆÂ∫ì: $dbPath\n";
    
    // ÂàõÂª∫Áî®Êà∑ÁÆ°ÁêÜÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫Áî®Êà∑ÁÆ°ÁêÜË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS admin_roles (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name VARCHAR(50) NOT NULL UNIQUE,
            display_name VARCHAR(100) NOT NULL,
            permissions TEXT,
            status VARCHAR(20) DEFAULT 'active',
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS admin_users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username VARCHAR(50) UNIQUE NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            phone VARCHAR(20),
            password_hash VARCHAR(255) NOT NULL,
            balance DECIMAL(10,2) DEFAULT 0.00,
            total_tokens INTEGER DEFAULT 0,
            used_tokens INTEGER DEFAULT 0,
            status VARCHAR(20) DEFAULT 'active',
            role_id INTEGER NOT NULL,
            avatar VARCHAR(255),
            last_login_at DATETIME NULL,
            last_login_ip VARCHAR(45),
            login_count INTEGER DEFAULT 0,
            risk_level VARCHAR(20) DEFAULT 'low',
            metadata TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (role_id) REFERENCES admin_roles(id)
        )
    ");
    
    // Áî®Êà∑‰ΩôÈ¢ùÊó•ÂøóË°®
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS user_balance_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            change_type VARCHAR(20) NOT NULL,
            amount DECIMAL(10,2) NOT NULL,
            balance_before DECIMAL(10,2) NOT NULL,
            balance_after DECIMAL(10,2) NOT NULL,
            description TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    // ÂàõÂª∫APIÁõëÊéßÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫APIÁõëÊéßË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS api_endpoints (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            endpoint VARCHAR(255) NOT NULL UNIQUE,
            method VARCHAR(10) DEFAULT 'GET',
            total_calls INTEGER DEFAULT 0,
            success_calls INTEGER DEFAULT 0,
            error_calls INTEGER DEFAULT 0,
            avg_response_time DECIMAL(10,3) DEFAULT 0,
            last_called_at DATETIME NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS api_call_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            endpoint VARCHAR(255) NOT NULL,
            method VARCHAR(10) NOT NULL,
            status_code INTEGER NOT NULL,
            request_size INTEGER DEFAULT 0,
            response_size INTEGER DEFAULT 0,
            duration DECIMAL(10,3) DEFAULT 0,
            ip_address VARCHAR(45),
            user_agent TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    // ÂàõÂª∫Á¨¨‰∏âÊñπÊúçÂä°Áõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫Á¨¨‰∏âÊñπÊúçÂä°Ë°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS third_party_services (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            service_name VARCHAR(100) NOT NULL,
            service_type VARCHAR(50) NOT NULL,
            config TEXT NOT NULL,
            status VARCHAR(20) DEFAULT 'inactive',
            last_health_check DATETIME NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS third_party_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            service_id INTEGER NOT NULL,
            action VARCHAR(100) NOT NULL,
            request_data TEXT,
            response_data TEXT,
            success INTEGER DEFAULT 0,
            duration DECIMAL(10,3) DEFAULT 0,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (service_id) REFERENCES third_party_services(id)
        )
    ");
    
    // ÂàõÂª∫È£éÊéßÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫È£éÊéßÁ≥ªÁªüË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS risk_rules (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name VARCHAR(100) NOT NULL,
            type VARCHAR(50) NOT NULL,
            conditions TEXT NOT NULL,
            action VARCHAR(50) NOT NULL,
            enabled INTEGER DEFAULT 1,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS risk_events (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            endpoint VARCHAR(255),
            risk_level VARCHAR(20) NOT NULL,
            risk_score INTEGER NOT NULL,
            risk_factors TEXT,
            ip_address VARCHAR(45),
            user_agent TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS blacklists (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            type VARCHAR(20) NOT NULL,
            value VARCHAR(255) NOT NULL,
            reason TEXT,
            status VARCHAR(20) DEFAULT 'active',
            expires_at DATETIME NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    // ÂàõÂª∫ËÅäÂ§©ÁõëÊéßÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫ËÅäÂ§©ÁõëÊéßË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS chat_sessions (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            session_type VARCHAR(50) DEFAULT 'ai_chat',
            metadata TEXT,
            status VARCHAR(20) DEFAULT 'active',
            last_activity_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS chat_messages (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            session_id INTEGER NOT NULL,
            user_id INTEGER NOT NULL,
            message_type VARCHAR(50) NOT NULL,
            content TEXT NOT NULL,
            metadata TEXT,
            is_flagged INTEGER DEFAULT 0,
            is_hidden INTEGER DEFAULT 0,
            flag_reason TEXT,
            risk_score INTEGER DEFAULT 0,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (session_id) REFERENCES chat_sessions(id),
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS sensitive_words (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            word VARCHAR(255) NOT NULL,
            category VARCHAR(50) NOT NULL,
            severity INTEGER DEFAULT 1,
            replacement VARCHAR(255),
            status VARCHAR(20) DEFAULT 'active',
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    // ÂàõÂª∫ÈÇÆ‰ª∂Á≥ªÁªüÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫ÈÇÆ‰ª∂Á≥ªÁªüË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS email_configs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name VARCHAR(100) NOT NULL,
            host VARCHAR(255) NOT NULL,
            port INTEGER NOT NULL,
            encryption VARCHAR(10),
            username VARCHAR(255) NOT NULL,
            password VARCHAR(255) NOT NULL,
            from_email VARCHAR(255) NOT NULL,
            from_name VARCHAR(255),
            status VARCHAR(20) DEFAULT 'active',
            is_default INTEGER DEFAULT 0,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS email_templates (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name VARCHAR(100) NOT NULL,
            template_key VARCHAR(100) NOT NULL UNIQUE,
            category VARCHAR(50) NOT NULL,
            subject_template TEXT NOT NULL,
            body_template TEXT NOT NULL,
            variables TEXT,
            status VARCHAR(20) DEFAULT 'active',
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS email_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            config_id INTEGER,
            template_key VARCHAR(100),
            to_email VARCHAR(255) NOT NULL,
            subject VARCHAR(500) NOT NULL,
            body TEXT NOT NULL,
            variables TEXT,
            status VARCHAR(20) DEFAULT 'pending',
            error_message TEXT,
            sent_at DATETIME NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (config_id) REFERENCES email_configs(id)
        )
    ");
    
    // ÂàõÂª∫TokenÁÆ°ÁêÜÁõ∏ÂÖ≥Ë°®
    echo "üìä ÂàõÂª∫TokenÁÆ°ÁêÜË°®...\n";
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS jwt_tokens (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            token_hash VARCHAR(255) NOT NULL,
            expires_at DATETIME NOT NULL,
            status VARCHAR(20) DEFAULT 'active',
            metadata TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS api_keys (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            key_name VARCHAR(100) NOT NULL,
            key_hash VARCHAR(255) NOT NULL,
            permissions TEXT,
            rate_limit INTEGER DEFAULT 1000,
            expires_at DATETIME NULL,
            last_used_at DATETIME NULL,
            status VARCHAR(20) DEFAULT 'active',
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES admin_users(id)
        )
    ");
    
    // ÊèíÂÖ•ÈªòËÆ§Êï∞ÊçÆ
    echo "üìä ÊèíÂÖ•ÈªòËÆ§Êï∞ÊçÆ...\n";
    
    // ÊèíÂÖ•ÈªòËÆ§ËßíËâ≤
    $pdo->exec("
        INSERT OR IGNORE INTO admin_roles (name, display_name, permissions) VALUES 
        ('super_admin', 'Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò', '{\"permissions\": [\"*\"]}'),
        ('admin', 'ÁÆ°ÁêÜÂëò', '{\"permissions\": [\"user_management\", \"api_monitoring\", \"system_settings\"]}'),
        ('moderator', 'ÁõëÂØüÂëò', '{\"permissions\": [\"chat_monitoring\", \"risk_control\"]}'),
        ('user', 'ÊôÆÈÄöÁî®Êà∑', '{\"permissions\": [\"basic_access\"]}')
    ");
    
    // ÊèíÂÖ•ÈªòËÆ§ÁÆ°ÁêÜÂëòË¥¶Êà∑
    $adminPassword = password_hash('admin123', PASSWORD_DEFAULT);
    $pdo->exec("
        INSERT OR IGNORE INTO admin_users (username, email, password_hash, role_id, status) VALUES 
        ('admin', 'admin@alingai.com', '$adminPassword', 1, 'active')
    ");
    
    // ÊèíÂÖ•ÈªòËÆ§ÊïèÊÑüËØç
    $pdo->exec("
        INSERT OR IGNORE INTO sensitive_words (word, category, severity) VALUES 
        ('ÊµãËØïÊïèÊÑüËØç', 'ÊµãËØï', 1),
        ('ËøùËßÑÂÜÖÂÆπ', 'ËøùËßÑ', 3),
        ('Âç±Èô©Ë°å‰∏∫', 'ÂÆâÂÖ®', 4)
    ");
    
    // ÊèíÂÖ•ÈªòËÆ§ÈÇÆ‰ª∂Ê®°Êùø
    $pdo->exec("
        INSERT OR IGNORE INTO email_templates (name, template_key, category, subject_template, body_template, variables) VALUES 
        ('Áî®Êà∑Ê≥®ÂÜåÈÄöÁü•', 'user_register', 'Áî®Êà∑ÁÆ°ÁêÜ', 'Ê¨¢ËøéÊ≥®ÂÜåAlingAi', '‰∫≤Áà±ÁöÑ{{username}}ÔºåÊ¨¢ËøéÊ≥®ÂÜåAlingAiÁ≥ªÁªüÔºÅ', '{\"variables\": [\"username\"]}'),
        ('ÂØÜÁ†ÅÈáçÁΩÆ', 'password_reset', 'ÂÆâÂÖ®', 'ÂØÜÁ†ÅÈáçÁΩÆÈÄöÁü•', 'ÊÇ®ÁöÑÂØÜÁ†ÅÈáçÁΩÆÈìæÊé•Ôºö{{reset_link}}', '{\"variables\": [\"reset_link\"]}')
    ");
    
    echo "‚úÖ AdminÁ≥ªÁªüSQLiteÊï∞ÊçÆÂ∫ìËøÅÁßªÂÆåÊàêÔºÅ\n";
    echo "üìç Êï∞ÊçÆÂ∫ìÊñá‰ª∂‰ΩçÁΩÆ: $dbPath\n";
    echo "üë§ ÈªòËÆ§ÁÆ°ÁêÜÂëòË¥¶Êà∑: admin / admin123\n\n";
    
    // ÊòæÁ§∫Ë°®ÁªüËÆ°
    echo "üìä Êï∞ÊçÆÂ∫ìË°®ÁªüËÆ°:\n";
    $tables = $pdo->query("SELECT name FROM sqlite_master WHERE type='table' ORDER BY name")->fetchAll(PDO::FETCH_COLUMN);
    foreach ($tables as $table) {
        $count = $pdo->query("SELECT COUNT(*) FROM $table")->fetchColumn();
        echo "  - $table: $count Êù°ËÆ∞ÂΩï\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå ËøÅÁßªÂ§±Ë¥•: " . $e->getMessage() . "\n";
    exit(1);
}
