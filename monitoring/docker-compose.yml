version: '3.8'

services:
  api-monitoring:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # 主系统
      - "9000:9000"  # API网关
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    depends_on:
      - timescaledb
    networks:
      - monitoring-network

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=api_monitoring
    volumes:
      - timescale-data:/var/lib/postgresql/data
    networks:
      - monitoring-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring-network

volumes:
  timescale-data:
  prometheus-data:
  grafana-data:

networks:
  monitoring-network:
    driver: bridge 