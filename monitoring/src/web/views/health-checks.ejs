<!-- 健康状态概览 -->
<div class="row mb-4">
  <div class="col-md-6 mb-4">
    <div class="card shadow h-100">
      <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">系统健康状态</h6>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6 text-center mb-4">
            <div class="health-gauge-container">
              <canvas id="healthGauge" width="200" height="200"></canvas>
              <div class="health-score" id="healthScore">
                <span id="healthScoreValue">93</span>
                <span class="small">分</span>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="system-health-details">
              <div class="mb-3">
                <h5 class="text-dark">监控服务状态</h5>
                <div class="progress mb-1">
                  <div class="progress-bar bg-success" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="d-flex justify-content-between">
                  <small class="text-success"><i class="bi bi-check-circle"></i> 正常运行</small>
                  <small>100%</small>
                </div>
              </div>
              
              <div class="mb-3">
                <h5 class="text-dark">数据存储状态</h5>
                <div class="progress mb-1">
                  <div class="progress-bar bg-success" role="progressbar" style="width: 95%" aria-valuenow="95" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="d-flex justify-content-between">
                  <small class="text-success"><i class="bi bi-check-circle"></i> 正常运行</small>
                  <small>95%</small>
                </div>
              </div>
              
              <div class="mb-3">
                <h5 class="text-dark">告警系统状态</h5>
                <div class="progress mb-1">
                  <div class="progress-bar bg-warning" role="progressbar" style="width: 85%" aria-valuenow="85" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="d-flex justify-content-between">
                  <small class="text-warning"><i class="bi bi-exclamation-triangle"></i> 轻微延迟</small>
                  <small>85%</small>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-6 mb-4">
    <div class="card shadow h-100">
      <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">系统资源使用</h6>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6 mb-4">
            <h5 class="text-dark text-center">CPU使用率</h5>
            <div class="text-center">
              <canvas id="cpuGauge" width="150" height="150"></canvas>
              <div class="resource-usage-value" id="cpuUsage">28%</div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <h5 class="text-dark text-center">内存使用率</h5>
            <div class="text-center">
              <canvas id="memoryGauge" width="150" height="150"></canvas>
              <div class="resource-usage-value" id="memoryUsage">54%</div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <h5 class="text-dark text-center">磁盘使用率</h5>
            <div class="text-center">
              <canvas id="diskGauge" width="150" height="150"></canvas>
              <div class="resource-usage-value" id="diskUsage">41%</div>
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <h5 class="text-dark text-center">网络流量</h5>
            <div class="text-center">
              <canvas id="networkGauge" width="150" height="150"></canvas>
              <div class="resource-usage-value" id="networkUsage">31%</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 健康检查历史 -->
<div class="row">
  <div class="col-12">
    <div class="card shadow mb-4">
      <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">健康检查历史</h6>
        <div class="dropdown">
          <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
            <i class="bi bi-funnel"></i> 筛选
          </button>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item health-filter" data-filter="all" href="#">所有检查</a></li>
            <li><a class="dropdown-item health-filter" data-filter="passed" href="#">通过</a></li>
            <li><a class="dropdown-item health-filter" data-filter="warning" href="#">警告</a></li>
            <li><a class="dropdown-item health-filter" data-filter="failed" href="#">失败</a></li>
          </ul>
        </div>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-bordered" id="healthChecksTable" width="100%" cellspacing="0">
            <thead>
              <tr>
                <th>时间</th>
                <th>检查项</th>
                <th>状态</th>
                <th>响应时间</th>
                <th>详细信息</th>
              </tr>
            </thead>
            <tbody>
              <% if (healthChecks && healthChecks.length > 0) { %>
                <% healthChecks.forEach(function(check) { %>
                  <tr class="health-check-row" data-status="<%= check.status %>">
                    <td><%= new Date(check.timestamp).toLocaleString() %></td>
                    <td><%= check.name %></td>
                    <td>
                      <% if (check.status === 'passed') { %>
                        <span class="badge bg-success">通过</span>
                      <% } else if (check.status === 'warning') { %>
                        <span class="badge bg-warning text-dark">警告</span>
                      <% } else { %>
                        <span class="badge bg-danger">失败</span>
                      <% } %>
                    </td>
                    <td><%= check.response_time %> ms</td>
                    <td>
                      <button class="btn btn-sm btn-info view-details" data-check-id="<%= check.id %>">
                        <i class="bi bi-info-circle"></i> 详情
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="text-center">暂无健康检查记录</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 健康检查详情模态框 -->
<div class="modal fade" id="healthCheckDetailModal" tabindex="-1" aria-labelledby="healthCheckDetailModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="healthCheckDetailModalLabel">健康检查详情</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label fw-bold">检查ID:</label>
              <div id="checkId"></div>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">检查时间:</label>
              <div id="checkTime"></div>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">检查项:</label>
              <div id="checkName"></div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label fw-bold">状态:</label>
              <div id="checkStatus"></div>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">响应时间:</label>
              <div id="checkResponseTime"></div>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">检查结果:</label>
              <div id="checkResult"></div>
            </div>
          </div>
        </div>
        <div class="row mt-3">
          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h6 class="m-0 font-weight-bold">详细信息</h6>
              </div>
              <div class="card-body">
                <pre id="checkDetails" class="bg-light p-3 rounded"></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
      </div>
    </div>
  </div>
</div>

<style>
  .health-gauge-container {
    position: relative;
    display: inline-block;
  }
  
  .health-score {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 2.5rem;
    font-weight: bold;
    color: #4e73df;
  }
  
  .health-score .small {
    font-size: 1rem;
  }
  
  .resource-usage-value {
    margin-top: -25px;
    font-size: 1.2rem;
    font-weight: bold;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 初始化健康状态仪表盘
    initHealthGauge();
    
    // 初始化系统资源仪表盘
    initResourceGauges();
    
    // 绑定筛选事件
    document.querySelectorAll('.health-filter').forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const filter = this.getAttribute('data-filter');
        filterHealthChecks(filter);
      });
    });
    
    // 绑定详情查看事件
    document.querySelectorAll('.view-details').forEach(function(btn) {
      btn.addEventListener('click', function() {
        const checkId = this.getAttribute('data-check-id');
        viewHealthCheckDetails(checkId);
      });
    });
    
    // 刷新事件
    document.addEventListener('refreshData', function() {
      refreshHealthData();
    });
  });
  
  /**
   * 初始化健康状态仪表盘
   */
  function initHealthGauge() {
    const ctx = document.getElementById('healthGauge').getContext('2d');
    
    // 创建渐变色
    const gradientFill = ctx.createLinearGradient(0, 0, 0, 400);
    gradientFill.addColorStop(0, "rgba(78, 115, 223, 0.8)");
    gradientFill.addColorStop(1, "rgba(78, 115, 223, 0.2)");
    
    // 创建仪表盘图表
    new Chart(ctx, {
      type: 'doughnut',
      data: {
        datasets: [{
          data: [93, 7], // 健康得分和剩余部分
          backgroundColor: [gradientFill, '#f8f9fc'],
          borderWidth: 0,
          cutout: '80%'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            enabled: false
          }
        }
      }
    });
  }
  
  /**
   * 初始化系统资源仪表盘
   */
  function initResourceGauges() {
    // CPU使用率仪表盘
    createResourceGauge('cpuGauge', 28, '#36b9cc');
    
    // 内存使用率仪表盘
    createResourceGauge('memoryGauge', 54, '#4e73df');
    
    // 磁盘使用率仪表盘
    createResourceGauge('diskGauge', 41, '#1cc88a');
    
    // 网络流量仪表盘
    createResourceGauge('networkGauge', 31, '#f6c23e');
  }
  
  /**
   * 创建资源使用率仪表盘
   * @param {string} canvasId 画布ID
   * @param {number} value 使用率值(0-100)
   * @param {string} color 图表颜色
   */
  function createResourceGauge(canvasId, value, color) {
    const ctx = document.getElementById(canvasId).getContext('2d');
    
    // 创建渐变色
    const gradientFill = ctx.createLinearGradient(0, 0, 0, 200);
    gradientFill.addColorStop(0, color);
    gradientFill.addColorStop(1, color + '80'); // 添加透明度
    
    // 创建仪表盘图表
    new Chart(ctx, {
      type: 'doughnut',
      data: {
        datasets: [{
          data: [value, 100 - value], // 使用率和剩余部分
          backgroundColor: [gradientFill, '#f8f9fc'],
          borderWidth: 0,
          cutout: '75%'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            enabled: false
          }
        }
      }
    });
  }
  
  /**
   * 筛选健康检查记录
   * @param {string} filter 筛选条件
   */
  function filterHealthChecks(filter) {
    const rows = document.querySelectorAll('.health-check-row');
    
    rows.forEach(function(row) {
      const status = row.getAttribute('data-status');
      
      if (filter === 'all' || status === filter) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }
  
  /**
   * 查看健康检查详情
   * @param {string} checkId 检查ID
   */
  function viewHealthCheckDetails(checkId) {
    // 这里应该通过AJAX获取健康检查详情
    // 以下是模拟数据
    const checkData = {
      id: checkId,
      timestamp: new Date().toISOString(),
      name: '数据库连接检查',
      status: Math.random() > 0.7 ? 'passed' : (Math.random() > 0.5 ? 'warning' : 'failed'),
      response_time: Math.floor(Math.random() * 200) + 20,
      result: Math.random() > 0.7 ? '数据库连接正常' : '数据库连接异常',
      details: JSON.stringify({
        host: 'localhost',
        port: 5432,
        database: 'monitoring',
        connection_pool: {
          active: 3,
          idle: 5,
          max: 10
        },
        queries: {
          executed: 152,
          failed: 0,
          average_time: 12.3
        }
      }, null, 2)
    };
    
    // 填充模态框
    document.getElementById('checkId').textContent = checkData.id;
    document.getElementById('checkTime').textContent = new Date(checkData.timestamp).toLocaleString();
    document.getElementById('checkName').textContent = checkData.name;
    
    const statusDisplay = document.getElementById('checkStatus');
    if (checkData.status === 'passed') {
      statusDisplay.innerHTML = '<span class="badge bg-success">通过</span>';
    } else if (checkData.status === 'warning') {
      statusDisplay.innerHTML = '<span class="badge bg-warning text-dark">警告</span>';
    } else {
      statusDisplay.innerHTML = '<span class="badge bg-danger">失败</span>';
    }
    
    document.getElementById('checkResponseTime').textContent = checkData.response_time + ' ms';
    document.getElementById('checkResult').textContent = checkData.result;
    document.getElementById('checkDetails').textContent = checkData.details;
    
    // 显示模态框
    const modal = new bootstrap.Modal(document.getElementById('healthCheckDetailModal'));
    modal.show();
  }
  
  /**
   * 刷新健康数据
   */
  function refreshHealthData() {
    // 模拟刷新数据
    // 实际应用中应该通过AJAX获取最新数据
    
    // 更新健康得分
    const newScore = Math.floor(Math.random() * 10) + 90;
    document.getElementById('healthScoreValue').textContent = newScore;
    
    // 更新资源使用率
    document.getElementById('cpuUsage').textContent = Math.floor(Math.random() * 50) + 10 + '%';
    document.getElementById('memoryUsage').textContent = Math.floor(Math.random() * 40) + 30 + '%';
    document.getElementById('diskUsage').textContent = Math.floor(Math.random() * 30) + 35 + '%';
    document.getElementById('networkUsage').textContent = Math.floor(Math.random() * 40) + 15 + '%';
    
    alert('健康数据已刷新');
  }
</script> 