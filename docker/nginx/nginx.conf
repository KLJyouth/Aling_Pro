# AlingAi Pro 6.0 高性能 Nginx 配置
# 优化性能、安全性和可扩展性

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # 基础设置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 字符集
    charset utf-8;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # 文件上传
    client_max_body_size 100M;
    client_body_buffer_size 1M;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    
    # 超时设置
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli 压缩（如果可用）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     application/json
    #     application/javascript
    #     text/xml
    #     application/xml
    #     application/xml+rss
    #     text/javascript;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https: wss:; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    
    # 隐藏 Nginx 版本
    server_tokens off;
    
    # 限制请求
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # 上游服务器配置
    upstream php-fpm {
        least_conn;
        server php-fpm-app1:9000 weight=1 max_fails=3 fail_timeout=30s;
        server php-fpm-app2:9000 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream nodejs-realtime {
        least_conn;
        server nodejs-realtime:3001 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream python-ai {
        least_conn;
        server python-ai:8000 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 缓存配置
    proxy_cache_path /var/cache/nginx/proxy 
                     levels=1:2 
                     keys_zone=proxy_cache:10m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    fastcgi_cache_path /var/cache/nginx/fastcgi 
                       levels=1:2 
                       keys_zone=fastcgi_cache:10m 
                       max_size=1g 
                       inactive=60m 
                       use_temp_path=off;
    
    # 主服务器配置
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # 重定向到 HTTPS
        return 301 https://$host$request_uri;
    }
    
    # HTTPS 服务器配置
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name alingai.local localhost;
        
        root /var/www/html/public;
        index index.php index.html index.htm;
        
        # SSL 配置
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API 限流
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;
            
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 登录限流
        location /auth/login {
            limit_req zone=login burst=5 nodelay;
            limit_conn conn_limit_per_ip 5;
            
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 静态文件缓存
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # 跨域设置
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            
            try_files $uri =404;
        }
        
        # WebSocket 代理（实时通信）
        location /ws/ {
            proxy_pass http://nodejs-realtime;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }
        
        # AI 服务代理
        location /ai/ {
            proxy_pass http://python-ai/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存配置
            proxy_cache proxy_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # PHP 处理
        location ~ \.php$ {
            try_files $uri =404;
            
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            include fastcgi_params;
            
            # FastCGI 缓存
            fastcgi_cache fastcgi_cache;
            fastcgi_cache_valid 200 10m;
            fastcgi_cache_valid 404 1m;
            fastcgi_cache_key "$scheme$request_method$host$request_uri";
            fastcgi_cache_bypass $http_cache_control;
            add_header X-FastCGI-Cache $upstream_cache_status;
            
            # 超时设置
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 300s;
            
            # 缓冲设置
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
        }
        
        # Laravel 路由
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # 安全限制
        location ~ /\. {
            deny all;
        }
        
        location ~ /\.ht {
            deny all;
        }
        
        location ~ /vendor/ {
            deny all;
        }
        
        location ~ /storage/ {
            deny all;
        }
        
        location ~ /bootstrap/cache/ {
            deny all;
        }
        
        # 禁止访问敏感文件
        location ~* \.(env|log|conf)$ {
            deny all;
        }
    }
    
    # 管理面板专用服务器
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name admin.alingai.local;
        
        root /var/www/html/public;
        index index.php;
        
        # SSL 配置（继承主配置）
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 管理面板安全设置
        location / {
            # IP 白名单（可根据需要调整）
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
            
            # 基础认证（额外安全层）
            # auth_basic "Admin Area";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # PHP 处理（管理面板）
        location ~ \.php$ {
            try_files $uri =404;
            
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTP_X_ADMIN_PANEL "true";
            include fastcgi_params;
            
            # 禁用缓存（管理面板需要实时数据）
            fastcgi_cache_bypass 1;
            fastcgi_no_cache 1;
        }
    }
    
    # 包含其他配置文件
    include /etc/nginx/conf.d/*.conf;
}
