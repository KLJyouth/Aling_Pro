{% extends "layouts/app.twig" %}

{% set page_title = "忘记密码" %}
{% set page_description = "重置您的AlingAi账户密码" %}
{% set hide_navigation = true %}
{% set forgot_password_page = true %}

{% block content %}
<div class="auth-container">
    <!-- 背景动画效果 -->
    <div class="auth-bg">
        <div class="quantum-field auth-quantum"></div>
        <div class="floating-shapes">
            <div class="shape shape-1"></div>
            <div class="shape shape-2"></div>
            <div class="shape shape-3"></div>
        </div>
    </div>

    <!-- 主要内容区域 -->
    <div class="auth-main">
        <div class="container-fluid h-100">
            <div class="row h-100 g-0 justify-content-center align-items-center">
                <div class="col-lg-5 col-md-7 col-sm-9 col-11">
                    <div class="auth-card">
                        <!-- 返回链接 -->
                        <div class="back-link">
                            <a href="{{ url_for('auth.login') }}" class="btn btn-link">
                                <i class="bi bi-arrow-left me-2"></i>
                                返回登录
                            </a>
                        </div>

                        <!-- 表单区域 -->
                        <div class="auth-form-container">
                            <!-- Logo和标题 -->
                            <div class="auth-header text-center">
                                <div class="auth-logo">
                                    <img src="/images/logo.svg" alt="AlingAi" class="logo-img">
                                </div>
                                <h2 class="auth-title">
                                    <i class="bi bi-key me-2"></i>
                                    忘记密码
                                </h2>
                                <p class="auth-subtitle">
                                    输入您的邮箱地址，我们将发送重置密码的链接给您
                                </p>
                            </div>

                            <!-- 重置密码表单 -->
                            <div id="forgotForm" class="forgot-form">
                                <form id="passwordResetForm" class="auth-form" novalidate>
                                    <div class="form-group">
                                        <label for="email" class="form-label">
                                            <i class="bi bi-envelope me-1"></i>
                                            邮箱地址
                                        </label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="bi bi-envelope-at"></i>
                                            </span>
                                            <input 
                                                type="email" 
                                                class="form-control" 
                                                id="email" 
                                                name="email" 
                                                placeholder="请输入注册时使用的邮箱"
                                                required
                                                autocomplete="email"
                                                data-validation="required|email"
                                            >
                                            <div class="invalid-feedback"></div>
                                        </div>
                                        <div class="form-hint">
                                            <small class="text-muted">
                                                请确保邮箱地址正确，我们会向该邮箱发送重置链接
                                            </small>
                                        </div>
                                    </div>

                                    <button type="submit" class="btn btn-primary auth-submit" id="submitBtn">
                                        <span class="btn-text">
                                            <i class="bi bi-send me-2"></i>
                                            发送重置链接
                                        </span>
                                        <span class="btn-loading d-none">
                                            <span class="spinner-border spinner-border-sm me-2"></span>
                                            发送中...
                                        </span>
                                    </button>
                                </form>
                            </div>

                            <!-- 成功状态 -->
                            <div id="successState" class="success-state d-none">
                                <div class="success-content text-center">
                                    <div class="success-icon">
                                        <i class="bi bi-envelope-check-fill text-success"></i>
                                    </div>
                                    <h4 class="success-title">邮件已发送</h4>
                                    <p class="success-message">
                                        我们已向 <strong id="sentEmail"></strong> 发送了密码重置链接。
                                    </p>
                                    <div class="success-hint">
                                        <p class="text-muted">
                                            <i class="bi bi-info-circle me-1"></i>
                                            请检查您的收件箱和垃圾邮件文件夹。重置链接将在24小时后过期。
                                        </p>
                                    </div>
                                    <div class="success-actions">
                                        <button type="button" class="btn btn-outline-primary" id="resendBtn">
                                            <i class="bi bi-arrow-clockwise me-2"></i>
                                            重新发送
                                        </button>
                                        <a href="{{ url_for('auth.login') }}" class="btn btn-primary">
                                            <i class="bi bi-box-arrow-in-right me-2"></i>
                                            返回登录
                                        </a>
                                    </div>
                                </div>
                            </div>

                            <!-- 帮助信息 -->
                            <div class="help-section">
                                <h6 class="help-title">
                                    <i class="bi bi-question-circle me-2"></i>
                                    需要帮助？
                                </h6>
                                <div class="help-content">
                                    <div class="help-item">
                                        <strong>没有收到邮件？</strong>
                                        <ul>
                                            <li>检查垃圾邮件文件夹</li>
                                            <li>确认邮箱地址拼写正确</li>
                                            <li>等待几分钟后再检查</li>
                                        </ul>
                                    </div>
                                    <div class="help-item">
                                        <strong>记不起注册邮箱？</strong>
                                        <p>请联系客服：<a href="mailto:support@alingai.com">support@alingai.com</a></p>
                                    </div>
                                    <div class="help-item">
                                        <strong>账户被锁定？</strong>
                                        <p>如果您的账户被暂时锁定，请等待或联系技术支持。</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 其他选项 -->
                        <div class="auth-footer">
                            <div class="footer-links">
                                <a href="{{ url_for('auth.register') }}" class="footer-link">
                                    <i class="bi bi-person-plus me-1"></i>
                                    创建新账户
                                </a>
                                <a href="/" class="footer-link">
                                    <i class="bi bi-house me-1"></i>
                                    返回首页
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 安全提示悬浮 -->
    <div class="security-badge">
        <i class="bi bi-shield-check"></i>
        <span>安全重置</span>
    </div>
</div>

<!-- 提示模态框 -->
<div class="modal fade" id="infoModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-info-circle me-2"></i>
                    密码重置说明
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="info-section">
                    <h6><i class="bi bi-clock me-2"></i>重置流程</h6>
                    <ol>
                        <li>输入您的注册邮箱地址</li>
                        <li>点击"发送重置链接"</li>
                        <li>检查邮箱并点击重置链接</li>
                        <li>设置新密码完成重置</li>
                    </ol>
                </div>
                <div class="info-section">
                    <h6><i class="bi bi-shield-lock me-2"></i>安全说明</h6>
                    <ul>
                        <li>重置链接24小时内有效</li>
                        <li>每个邮箱每小时最多发送3次</li>
                        <li>链接使用后自动失效</li>
                        <li>建议设置强密码保护账户</li>
                    </ul>
                </div>
                <div class="info-section">
                    <h6><i class="bi bi-telephone me-2"></i>遇到问题？</h6>
                    <p>如果您在重置密码过程中遇到任何问题，请联系我们的技术支持团队。</p>
                    <div class="contact-info">
                        <p><strong>邮箱：</strong><a href="mailto:support@alingai.com">support@alingai.com</a></p>
                        <p><strong>工作时间：</strong>周一至周五 9:00-18:00</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-2"></i>
                    关闭
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block styles %}
<style>
/* 继承认证页面基础样式 */
.auth-container {
    min-height: 100vh;
    position: relative;
    overflow: hidden;
}

.auth-bg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    z-index: 1;
}

.auth-quantum {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.3;
}

.floating-shapes {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
}

.floating-shapes .shape {
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    animation: float 20s infinite linear;
}

.shape-1 {
    width: 80px;
    height: 80px;
    top: 20%;
    left: 15%;
    animation-delay: 0s;
}

.shape-2 {
    width: 120px;
    height: 120px;
    top: 60%;
    right: 20%;
    animation-delay: 7s;
}

.shape-3 {
    width: 60px;
    height: 60px;
    top: 80%;
    left: 50%;
    animation-delay: 14s;
}

@keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    25% { transform: translateY(-30px) rotate(90deg); }
    50% { transform: translateY(0px) rotate(180deg); }
    75% { transform: translateY(-30px) rotate(270deg); }
}

.auth-main {
    position: relative;
    z-index: 2;
    min-height: 100vh;
}

/* 认证卡片 */
.auth-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 16px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    padding: 2rem;
    position: relative;
    margin: 2rem 0;
}

.auth-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #4dabf7, #339af0);
    border-radius: 16px 16px 0 0;
}

/* 返回链接 */
.back-link {
    margin-bottom: 1.5rem;
}

.back-link .btn-link {
    color: #6c757d;
    text-decoration: none;
    padding: 0;
    font-size: 0.9rem;
    transition: color 0.3s ease;
}

.back-link .btn-link:hover {
    color: #4dabf7;
}

/* 头部区域 */
.auth-header {
    margin-bottom: 2rem;
}

.auth-logo {
    margin-bottom: 1.5rem;
}

.logo-img {
    width: 80px;
    height: 80px;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

.auth-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: #212529;
    margin-bottom: 0.75rem;
}

.auth-subtitle {
    color: #6c757d;
    font-size: 1rem;
    line-height: 1.5;
    margin: 0;
}

/* 表单样式 */
.auth-form {
    margin-bottom: 2rem;
}

.form-group {
    margin-bottom: 1.5rem;
}

.form-label {
    font-weight: 500;
    color: #495057;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
}

.input-group-text {
    background: #f8f9fa;
    border-color: #ced4da;
    color: #6c757d;
    min-width: 50px;
    justify-content: center;
}

.form-control {
    padding: 0.875rem;
    border-radius: 0 8px 8px 0;
    border-color: #ced4da;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: #4dabf7;
    box-shadow: 0 0 0 0.2rem rgba(77, 171, 247, 0.25);
}

.form-hint {
    margin-top: 0.5rem;
}

.form-hint small {
    font-size: 0.85rem;
    line-height: 1.4;
}

.auth-submit {
    width: 100%;
    padding: 0.875rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 8px;
    background: linear-gradient(45deg, #4dabf7, #339af0);
    border: none;
    transition: all 0.3s ease;
    margin-bottom: 2rem;
}

.auth-submit:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(77, 171, 247, 0.4);
}

.auth-submit:disabled {
    transform: none;
    box-shadow: none;
    opacity: 0.6;
}

/* 成功状态 */
.success-state {
    text-align: center;
    padding: 2rem 0;
}

.success-icon {
    margin-bottom: 1.5rem;
}

.success-icon i {
    font-size: 4rem;
    color: #28a745;
    animation: bounceIn 0.6s ease-out;
}

.success-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #212529;
    margin-bottom: 1rem;
}

.success-message {
    font-size: 1rem;
    color: #495057;
    margin-bottom: 1.5rem;
    line-height: 1.5;
}

.success-hint {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 2rem;
    border-left: 4px solid #4dabf7;
}

.success-hint p {
    margin: 0;
    font-size: 0.9rem;
}

.success-actions {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

@keyframes bounceIn {
    0% { transform: scale(0.3); opacity: 0; }
    50% { transform: scale(1.05); }
    70% { transform: scale(0.9); }
    100% { transform: scale(1); opacity: 1; }
}

/* 帮助区域 */
.help-section {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 2rem;
}

.help-title {
    color: #495057;
    font-size: 1rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #dee2e6;
}

.help-content {
    color: #6c757d;
}

.help-item {
    margin-bottom: 1.25rem;
}

.help-item:last-child {
    margin-bottom: 0;
}

.help-item strong {
    color: #495057;
    display: block;
    margin-bottom: 0.5rem;
}

.help-item ul {
    margin: 0.5rem 0 0 1.25rem;
    padding: 0;
}

.help-item li {
    margin-bottom: 0.25rem;
    font-size: 0.9rem;
}

.help-item p {
    margin: 0.5rem 0 0 0;
    font-size: 0.9rem;
    line-height: 1.4;
}

.help-item a {
    color: #4dabf7;
    text-decoration: none;
}

.help-item a:hover {
    text-decoration: underline;
}

/* 页脚链接 */
.auth-footer {
    border-top: 1px solid #dee2e6;
    padding-top: 1.5rem;
}

.footer-links {
    display: flex;
    justify-content: center;
    gap: 2rem;
}

.footer-link {
    color: #6c757d;
    text-decoration: none;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    transition: color 0.3s ease;
}

.footer-link:hover {
    color: #4dabf7;
}

/* 安全徽章 */
.security-badge {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: rgba(40, 167, 69, 0.9);
    color: white;
    padding: 0.75rem 1rem;
    border-radius: 25px;
    font-size: 0.85rem;
    font-weight: 500;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    z-index: 1000;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.security-badge i {
    font-size: 1rem;
}

/* 模态框样式 */
.info-section {
    margin-bottom: 1.5rem;
}

.info-section:last-child {
    margin-bottom: 0;
}

.info-section h6 {
    color: #495057;
    margin-bottom: 0.75rem;
    font-size: 0.95rem;
}

.info-section ol,
.info-section ul {
    margin: 0.5rem 0 0 1.25rem;
    padding: 0;
}

.info-section li {
    margin-bottom: 0.25rem;
    font-size: 0.9rem;
    color: #6c757d;
}

.contact-info {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 6px;
    margin-top: 0.75rem;
}

.contact-info p {
    margin: 0.25rem 0;
    font-size: 0.9rem;
}

.contact-info a {
    color: #4dabf7;
    text-decoration: none;
}

.contact-info a:hover {
    text-decoration: underline;
}

/* 表单验证样式 */
.form-control.is-invalid {
    border-color: #dc3545;
}

.form-control.is-valid {
    border-color: #28a745;
}

.invalid-feedback {
    display: block;
    font-size: 0.875rem;
    color: #dc3545;
    margin-top: 0.25rem;
}

/* 响应式设计 */
@media (max-width: 767.98px) {
    .auth-card {
        margin: 1rem 0;
        padding: 1.5rem;
        border-radius: 12px;
    }
    
    .auth-title {
        font-size: 1.5rem;
    }
    
    .logo-img {
        width: 60px;
        height: 60px;
    }
    
    .success-actions {
        grid-template-columns: 1fr;
    }
    
    .footer-links {
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }
    
    .security-badge {
        bottom: 1rem;
        right: 1rem;
        padding: 0.5rem 0.75rem;
        font-size: 0.8rem;
    }
}

@media (max-width: 575.98px) {
    .auth-card {
        padding: 1rem;
    }
    
    .auth-header {
        margin-bottom: 1.5rem;
    }
    
    .help-section {
        padding: 1rem;
    }
    
    .success-icon i {
        font-size: 3rem;
    }
}

/* 加载动画 */
.btn-loading .spinner-border {
    width: 1rem;
    height: 1rem;
}

/* 淡入动画 */
.auth-card {
    animation: fadeInUp 0.6s ease-out;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 交互动画 */
.auth-submit,
.footer-link,
.back-link .btn-link {
    transition: all 0.3s ease;
}

.form-control:focus {
    transform: translateY(-1px);
}

/* 提示消息样式 */
.notification-toast {
    position: fixed;
    top: 2rem;
    right: 2rem;
    max-width: 400px;
    z-index: 2000;
    animation: slideInRight 0.3s ease-out;
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
</style>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const forgotForm = document.getElementById('forgotForm');
    const successState = document.getElementById('successState');
    const passwordResetForm = document.getElementById('passwordResetForm');
    const submitBtn = document.getElementById('submitBtn');
    const resendBtn = document.getElementById('resendBtn');
    
    let userEmail = '';
    let resendTimer = null;
    let resendCount = 0;
    const maxResends = 3;
    const resendCooldown = 60; // 60秒冷却时间
    
    // 密码重置表单提交
    if (passwordResetForm) {
        passwordResetForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!validateForm(this)) {
                return;
            }
            
            const btnText = submitBtn.querySelector('.btn-text');
            const btnLoading = submitBtn.querySelector('.btn-loading');
            
            // 显示加载状态
            btnText.classList.add('d-none');
            btnLoading.classList.remove('d-none');
            submitBtn.disabled = true;
            
            try {
                const formData = new FormData(this);
                userEmail = formData.get('email');
                
                const response = await fetch('/auth/forgot-password', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // 显示成功状态
                    document.getElementById('sentEmail').textContent = userEmail;
                    showSuccessState();
                    showNotification('密码重置邮件已发送', 'success');
                } else {
                    showNotification(result.message || '发送失败，请稍后重试', 'error');
                    
                    // 显示字段错误
                    if (result.errors) {
                        showFieldErrors(result.errors);
                    }
                }
            } catch (error) {
                console.error('发送重置邮件错误:', error);
                showNotification('网络错误，请检查连接后重试', 'error');
            } finally {
                // 恢复按钮状态
                btnText.classList.remove('d-none');
                btnLoading.classList.add('d-none');
                submitBtn.disabled = false;
            }
        });
    }
    
    // 重新发送邮件
    if (resendBtn) {
        resendBtn.addEventListener('click', async function() {
            if (resendCount >= maxResends) {
                showNotification('已达到最大发送次数，请稍后再试', 'warning');
                return;
            }
            
            const originalText = this.innerHTML;
            this.disabled = true;
            this.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>发送中...';
            
            try {
                const response = await fetch('/auth/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ email: userEmail })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    resendCount++;
                    showNotification('重置邮件已重新发送', 'success');
                    startResendCooldown();
                } else {
                    showNotification(result.message || '发送失败，请稍后重试', 'error');
                }
            } catch (error) {
                console.error('重发邮件错误:', error);
                showNotification('网络错误，请稍后重试', 'error');
            } finally {
                this.innerHTML = originalText;
                if (resendCount < maxResends) {
                    this.disabled = false;
                }
            }
        });
    }
    
    // 显示帮助信息
    const infoBtn = document.createElement('button');
    infoBtn.className = 'btn btn-link info-btn';
    infoBtn.innerHTML = '<i class="bi bi-info-circle"></i>';
    infoBtn.setAttribute('data-bs-toggle', 'modal');
    infoBtn.setAttribute('data-bs-target', '#infoModal');
    infoBtn.title = '查看重置说明';
    
    const authHeader = document.querySelector('.auth-header');
    if (authHeader) {
        authHeader.appendChild(infoBtn);
    }
});

// 显示成功状态
function showSuccessState() {
    const forgotForm = document.getElementById('forgotForm');
    const successState = document.getElementById('successState');
    
    if (forgotForm && successState) {
        forgotForm.classList.add('d-none');
        successState.classList.remove('d-none');
    }
}

// 重发冷却时间
function startResendCooldown() {
    const resendBtn = document.getElementById('resendBtn');
    if (!resendBtn) return;
    
    let cooldownTime = 60;
    resendBtn.disabled = true;
    
    const originalText = resendBtn.innerHTML;
    
    const timer = setInterval(() => {
        resendBtn.innerHTML = `<i class="bi bi-clock me-2"></i>等待 ${cooldownTime}s`;
        cooldownTime--;
        
        if (cooldownTime < 0) {
            clearInterval(timer);
            resendBtn.innerHTML = originalText;
            resendBtn.disabled = false;
        }
    }, 1000);
}

// 表单验证
function validateForm(form) {
    const inputs = form.querySelectorAll('[data-validation]');
    let isValid = true;
    
    inputs.forEach(input => {
        const rules = input.getAttribute('data-validation').split('|');
        const value = input.value.trim();
        let fieldValid = true;
        let errorMessage = '';
        
        // 清除之前的验证状态
        input.classList.remove('is-valid', 'is-invalid');
        const feedback = input.parentElement.querySelector('.invalid-feedback');
        if (feedback) feedback.textContent = '';
        
        // 验证规则
        for (const rule of rules) {
            if (rule === 'required' && !value) {
                fieldValid = false;
                errorMessage = '请输入邮箱地址';
                break;
            }
            
            if (rule === 'email' && value && !isValidEmail(value)) {
                fieldValid = false;
                errorMessage = '请输入有效的邮箱地址';
                break;
            }
        }
        
        // 应用验证结果
        if (fieldValid && value) {
            input.classList.add('is-valid');
        } else if (!fieldValid) {
            input.classList.add('is-invalid');
            if (feedback) feedback.textContent = errorMessage;
            isValid = false;
        }
    });
    
    return isValid;
}

// 邮箱验证
function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

// 显示字段错误
function showFieldErrors(errors) {
    Object.keys(errors).forEach(fieldName => {
        const input = document.querySelector(`[name="${fieldName}"]`);
        if (input) {
            input.classList.add('is-invalid');
            const feedback = input.parentElement.querySelector('.invalid-feedback');
            if (feedback) {
                feedback.textContent = errors[fieldName][0];
            }
        }
    });
}

// 通知系统
function showNotification(message, type = 'info') {
    // 移除现有通知
    const existing = document.querySelector('.notification-toast');
    if (existing) {
        existing.remove();
    }
    
    // 创建通知元素
    const notification = document.createElement('div');
    notification.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible notification-toast`;
    notification.innerHTML = `
        <div class="d-flex align-items-center">
            <i class="bi bi-${getNotificationIcon(type)} me-2"></i>
            <span>${message}</span>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    // 添加到页面
    document.body.appendChild(notification);
    
    // 自动删除
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}

function getNotificationIcon(type) {
    const icons = {
        success: 'check-circle',
        error: 'exclamation-triangle',
        warning: 'exclamation-triangle',
        info: 'info-circle'
    };
    return icons[type] || 'info-circle';
}

// 页面可见性变化时检查邮箱
document.addEventListener('visibilitychange', function() {
    if (!document.hidden) {
        // 页面变为可见时，可以检查是否有新邮件
        console.log('页面变为可见，可以检查邮件状态');
    }
});

// 键盘快捷键
document.addEventListener('keydown', function(e) {
    // Escape键关闭模态框
    if (e.key === 'Escape') {
        const modal = document.querySelector('.modal.show');
        if (modal) {
            const modalInstance = bootstrap.Modal.getInstance(modal);
            if (modalInstance) {
                modalInstance.hide();
            }
        }
    }
    
    // Ctrl+Enter 提交表单
    if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
        const form = document.getElementById('passwordResetForm');
        if (form && !form.querySelector('button[type="submit"]').disabled) {
            form.dispatchEvent(new Event('submit', { cancelable: true }));
        }
    }
});
</script>
{% endblock %}
