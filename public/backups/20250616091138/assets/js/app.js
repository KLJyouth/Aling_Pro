 // 全局应用程序对象 window.AlingAi = window.AlingAi || { version: '5.0.0', config: { apiUrl: '/api', debug: false }, modules: {}, utils: {} }; // 工具函数 AlingAi.utils = { // AJAX请求封装 request: function(url, options = {}) { return fetch(url, { method: options.method || 'GET', headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest', ...options.headers }, body: options.data ? JSON.stringify(options.data) : null, ...options }).then(response => { if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } return response.json(); }); }, // DOM就绪检测 ready: function(callback) { if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', callback); } else { callback(); } }, // 显示通知 showNotification: function(message, type = 'info') { const notification = document.createElement('div'); notification.className = `notification notification-${type}`; notification.textContent = message; // 添加样式 notification.style.cssText = ` position: fixed; top: 20px; right: 20px; padding: 15px 20px; border-radius: 5px; color: white; z-index: 10000; font-family: Arial, sans-serif; max-width: 300px; opacity: 0; transition: opacity 0.3s ease; `; // 设置颜色 const colors = { info: '#007bff', success: '#28a745', warning: '#ffc107', error: '#dc3545' }; notification.style.backgroundColor = colors[type] || colors.info; document.body.appendChild(notification); // 显示动画 setTimeout(() => notification.style.opacity = '1', 100); // 自动移除 setTimeout(() => { notification.style.opacity = '0'; setTimeout(() => document.body.removeChild(notification), 300); }, 3000); }, // 格式化文件大小 formatFileSize: function(bytes) { if (bytes === 0) return '0 Bytes'; const k = 1024; const sizes = ['Bytes', 'KB', 'MB', 'GB']; const i = Math.floor(Math.log(bytes) / Math.log(k)); return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]; }, // 防抖函数 debounce: function(func, wait) { let timeout; return function executedFunction(...args) { const later = () => { clearTimeout(timeout); func(...args); }; clearTimeout(timeout); timeout = setTimeout(later, wait); }; } }; // API模块 AlingAi.modules.api = { // 获取系统状态 getSystemStatus: function() { return AlingAi.utils.request(AlingAi.config.apiUrl + '/system/status'); }, // 用户认证 authenticate: function(credentials) { return AlingAi.utils.request(AlingAi.config.apiUrl + '/auth/login', { method: 'POST', data: credentials }); }, // 上传文件 uploadFile: function(file, onProgress) { const formData = new FormData(); formData.append('file', file); return new Promise((resolve, reject) => { const xhr = new XMLHttpRequest(); xhr.upload.addEventListener('progress', (e) => { if (e.lengthComputable && onProgress) { const progress = (e.loaded / e.total) * 100; onProgress(progress); } }); xhr.addEventListener('load', () => { if (xhr.status === 200) { try { resolve(JSON.parse(xhr.responseText)); } catch (e) { reject(new Error('Invalid response format')); } } else { reject(new Error(`Upload failed: ${xhr.status}`)); } }); xhr.addEventListener('error', () => { reject(new Error('Upload failed')); }); xhr.open('POST', AlingAi.config.apiUrl + '/upload'); xhr.send(formData); }); } }; // UI组件模块 AlingAi.modules.ui = { // 初始化加载动画 initLoading: function() { const loader = document.getElementById('loading'); if (loader) { // 页面加载完成后隐藏加载动画 window.addEventListener('load', () => { loader.style.opacity = '0'; setTimeout(() => { loader.style.display = 'none'; }, 300); }); } }, // 初始化导航菜单 initNavigation: function() { const navToggle = document.querySelector('.nav-toggle'); const navMenu = document.querySelector('.nav-menu'); if (navToggle && navMenu) { navToggle.addEventListener('click', () => { navMenu.classList.toggle('active'); }); } }, // 初始化表单验证 initFormValidation: function() { const forms = document.querySelectorAll('form[data-validate]'); forms.forEach(form => { form.addEventListener('submit', (e) => { if (!this.validateForm(form)) { e.preventDefault(); } }); }); }, // 表单验证 validateForm: function(form) { let isValid = true; const inputs = form.querySelectorAll('input[required], textarea[required], select[required]'); inputs.forEach(input => { if (!input.value.trim()) { this.showFieldError(input, '此字段为必填项'); isValid = false; } else { this.clearFieldError(input); } }); return isValid; }, // 显示字段错误 showFieldError: function(field, message) { this.clearFieldError(field); const error = document.createElement('div'); error.className = 'field-error'; error.textContent = message; error.style.cssText = 'color: #dc3545; font-size: 0.875em; margin-top: 5px;'; field.parentNode.appendChild(error); field.style.borderColor = '#dc3545'; }, // 清除字段错误 clearFieldError: function(field) { const error = field.parentNode.querySelector('.field-error'); if (error) { error.remove(); } field.style.borderColor = ''; } }; // 初始化应用程序 AlingAi.init = function() { console.log(`AlingAi Pro ${this.version} - 初始化中...`); // 初始化UI组件 this.modules.ui.initLoading(); this.modules.ui.initNavigation(); this.modules.ui.initFormValidation(); // 检查系统状态 this.modules.api.getSystemStatus() .then(status => { console.log('系统状态:', status); if (this.config.debug) { console.log('调试模式已启用'); } }) .catch(error => { console.warn('无法获取系统状态:', error); }); console.log('AlingAi Pro 初始化完成'); }; // 当DOM就绪时自动初始化 AlingAi.utils.ready(() => { AlingAi.init(); }); // 导出到全局作用域（如果需要） if (typeof module !== 'undefined' && module.exports) { module.exports = AlingAi; } // 版权信息 console.log(` ╔══════════════════════════════════════════════════════════════════════════════╗ ║ AlingAi Pro 5.0 ║ ║ Main Application JavaScript ║ ║ © 2025 AlingAi Team ║ ╚══════════════════════════════════════════════════════════════════════════════╝ `); 