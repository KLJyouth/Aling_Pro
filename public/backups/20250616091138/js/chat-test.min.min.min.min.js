console.log('开始聊天页面功能测试...');function waitForPageLoad(){return new Promise(resolve=>{if(document.readyState==='complete'){resolve();}else{window.addEventListener('load',resolve);}});}function testDOMElements(){console.log('测试DOM元素...');const requiredElements=[ 'loginModal','loginButton','guestModeButton','userStatus','messageInput','sendButton','chatMessages','historyBtn','settingsBtn' ];const results={};requiredElements.forEach(id=>{const element=document.getElementById(id);results[id]=!!element;console.log(`${id}: ${results[id] ? '✓' : '✗'}`);if(!element){console.error(`缺少必需的DOM元素: ${id}`);}});return results;}function testGuestMode(){console.log('测试访客模式功能...');const guestBtn=document.getElementById('guestModeButton');const userStatus=document.getElementById('userStatus');if(!guestBtn){console.error('访客模式按钮不存在');return false;}guestBtn.click();const isGuestMode=localStorage.getItem('guestMode')==='true';console.log('访客模式状态:',isGuestMode ? '✓' : '✗');if(userStatus){console.log('用户状态显示:',userStatus.textContent);}return isGuestMode;}function testMessageInput(){console.log('测试消息输入功能...');const messageInput=document.getElementById('messageInput');const sendButton=document.getElementById('sendButton');if(!messageInput || !sendButton){console.error('消息输入元素不存在');return false;}messageInput.value='';messageInput.dispatchEvent(new Event('input'));console.log('空输入时发送按钮状态:',sendButton.disabled ? '禁用 ✓' : '启用 ✗');messageInput.value='测试消息';messageInput.dispatchEvent(new Event('input'));console.log('有内容时发送按钮状态:',sendButton.disabled ? '禁用 ✗' : '启用 ✓');return true;}async function testChatAPI(){console.log('测试聊天API功能...');try{if(window.chatInstance){console.log('聊天实例存在 ✓');const{api}=window.chatInstance;if(api && api.isInitialized){console.log('API已初始化 ✓');localStorage.setItem('guestMode','true');try{const response=await api.sendMessage('这是一条测试消息');console.log('访客模式消息发送 ✓');console.log('回复内容:',response.content);return true;}catch(error){console.error('访客模式消息发送失败:',error);return false;}}else{console.error('API未初始化 ✗');return false;}}else{console.error('聊天实例不存在 ✗');return false;}}catch(error){console.error('API测试失败:',error);return false;}}function testUIFunctions(){console.log('测试UI功能...');if(!window.chatInstance){console.error('聊天实例不存在');return false;}const{ui}=window.chatInstance;try{ui.updateUserStatus('测试状态');const userStatus=document.getElementById('userStatus');console.log('用户状态更新:',userStatus?.textContent==='测试状态' ? '✓' : '✗');ui.addMessage({id: 'test-'+Date.now(),type: 'user',content: '这是一条测试消息',timestamp: new Date().toISOString()});console.log('消息添加功能 ✓');return true;}catch(error){console.error('UI功能测试失败:',error);return false;}}async function runTests(){try{await waitForPageLoad();console.log('===聊天页面功能测试报告===');const domResults=testDOMElements();console.log('等待聊天系统初始化...');await new Promise(resolve=> setTimeout(resolve,3000));const guestModeResult=testGuestMode();const inputResult=testMessageInput();const apiResult=await testChatAPI();const uiResult=testUIFunctions();console.log('\n===测试结果总结===');console.log('DOM元素:',Object.values(domResults).every(v=> v)? '✓' : '✗');console.log('访客模式:',guestModeResult ? '✓' : '✗');console.log('消息输入:',inputResult ? '✓' : '✗');console.log('API功能:',apiResult ? '✓' : '✗');console.log('UI功能:',uiResult ? '✓' : '✗');const allPassed=Object.values(domResults).every(v=> v)&& guestModeResult && inputResult && apiResult && uiResult;console.log('\n整体状态:',allPassed ? '✅ 所有测试通过' : '❌ 存在问题需要修复');return allPassed;}catch(error){console.error('测试过程中发生错误:',error);return false;}}if(typeof window !=='undefined'){if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',()=>{setTimeout(runTests,1000);});}else{setTimeout(runTests,1000);}window.chatTest={runTests,testDOMElements,testGuestMode,testMessageInput,testChatAPI,testUIFunctions};}if(typeof module !=='undefined' && module.exports){module.exports={runTests,testDOMElements,testGuestMode,testMessageInput,testChatAPI,testUIFunctions};}