class DataVisualizationEnhancement{constructor(){this.dataConnections=new Map();this.visualizations=new Map();this.animationParameters={particleCount: 20,speed: 1.0,colorScheme: 'quantum',intensity: 1.0};this.dataTypes={system: ['cpu','memory','gpu','network'],performance: ['fps','loadTime','renderTime'],user: ['interactions','timeOnPage','scrollDepth'],realtime: ['timestamp','randomSeed','weatherAPI']};this.init();}init(){this.setupDataSources();this.createVisualizationMappings();this.startDataCollection();console.log('📊 数据可视化增强系统初始化完成');}setupDataSources(){this.dataConnections.set('system',{type: 'system',active: true,updateInterval: 1000,lastUpdate: 0,data:{}});this.dataConnections.set('user',{type: 'user',active: true,updateInterval: 100,lastUpdate: 0,data:{interactions: 0,mouseX: 0,mouseY: 0,scrollY: 0}});this.dataConnections.set('random',{type: 'random',active: true,updateInterval: 50,lastUpdate: 0,data:{}});this.dataConnections.set('external',{type: 'external',active: false,updateInterval: 60000,lastUpdate: 0,data:{}});}createVisualizationMappings(){this.addMapping('system.cpu',(value)=>{this.updateAnimationParameter('speed',0.5+(value/100)*1.5);});this.addMapping('system.memory',(value)=>{const count=Math.floor(10+(value/100)*40);this.updateAnimationParameter('particleCount',count);});this.addMapping('user.mouse',(data)=>{this.updateGravityCenter(data.x,data.y);});this.addMapping('user.scroll',(value)=>{const intensity=Math.min(2.0,0.5+value*0.001);this.updateAnimationParameter('intensity',intensity);});this.addMapping('random.seed',(value)=>{this.updateColorScheme(value);});this.addMapping('realtime.timestamp',(timestamp)=>{const rhythm=Math.sin(timestamp*0.001)*0.5+0.5;this.updateAnimationRhythm(rhythm);});}addMapping(dataPath,callback){this.visualizations.set(dataPath,callback);}startDataCollection(){this.collectSystemData();setInterval(()=> this.collectSystemData(),1000);this.setupUserInteractionTracking();this.generateRandomData();setInterval(()=> this.generateRandomData(),50);setInterval(()=> this.updateTimestamp(),16);}collectSystemData(){const data=this.dataConnections.get('system');data.data={cpu: this.getRandomValue(20,80),memory: this.getRandomValue(30,70),gpu: this.getRandomValue(10,90),network: this.getRandomValue(0,100)};data.lastUpdate=Date.now();this.processDataUpdate('system',data.data);}setupUserInteractionTracking(){const data=this.dataConnections.get('user');document.addEventListener('mousemove',(event)=>{data.data.mouseX=event.clientX;data.data.mouseY=event.clientY;data.lastUpdate=Date.now();this.processDataUpdate('user.mouse',{x: event.clientX,y: event.clientY});});document.addEventListener('click',()=>{data.data.interactions++;this.processDataUpdate('user.interactions',data.data.interactions);});window.addEventListener('scroll',()=>{data.data.scrollY=window.scrollY;this.processDataUpdate('user.scroll',window.scrollY);});document.addEventListener('keydown',()=>{data.data.interactions++;});}generateRandomData(){const data=this.dataConnections.get('random');data.data={seed: Math.random(),noise: this.perlinNoise(Date.now()*0.001),wave: Math.sin(Date.now()*0.003),fluctuation: Math.random()*2-1};data.lastUpdate=Date.now();this.processDataUpdate('random.seed',data.data.seed);}updateTimestamp(){const timestamp=Date.now();this.processDataUpdate('realtime.timestamp',timestamp);}processDataUpdate(dataPath,value){const callback=this.visualizations.get(dataPath);if(callback){try{callback(value);}catch(error){console.warn(`数据映射执行失败 ${dataPath}:`,error);}}}updateAnimationParameter(param,value){this.animationParameters[param]=value;if(window.cppAnimation && window.cppAnimation.updateParameter){window.cppAnimation.updateParameter(param,value);}if(window.performanceMonitor && param==='particleCount'){window.performanceMonitor.updateSettings({particleCount: value});}}updateGravityCenter(x,y){if(window.cppAnimation && window.cppAnimation.setGravityCenter){const container=document.querySelector('.cpp-animation-container-enhanced');if(container){const rect=container.getBoundingClientRect();const relativeX=(x-rect.left)/rect.width;const relativeY=(y-rect.top)/rect.height;window.cppAnimation.setGravityCenter(relativeX,relativeY);}}}updateColorScheme(seed){const schemes=[ 'quantum','cyberpunk','aurora','plasma','matrix','galaxy' ];const index=Math.floor(seed*schemes.length);const scheme=schemes[index];this.animationParameters.colorScheme=scheme;if(window.cppAnimation && window.cppAnimation.setColorScheme){window.cppAnimation.setColorScheme(scheme);}}updateAnimationRhythm(rhythm){if(window.cppAnimation && window.cppAnimation.setRhythm){window.cppAnimation.setRhythm(rhythm);}}async fetchExternalData(){try{const weatherResponse=await fetch('https: const weatherData=await weatherResponse.json();this.processDataUpdate('external.weather',weatherData);this.mapWeatherToAnimation(weatherData);}catch(error){console.warn('外部数据获取失败:',error);}}mapWeatherToAnimation(weatherData){if(!weatherData.weather)return;const condition=weatherData.weather[0].main.toLowerCase();const mappings={'clear':{colorScheme: 'aurora',speed: 1.2},'clouds':{colorScheme: 'matrix',speed: 0.8},'rain':{colorScheme: 'cyberpunk',intensity: 1.5},'snow':{colorScheme: 'quantum',particleCount: 50},'thunderstorm':{colorScheme: 'plasma',speed: 2.0}};const mapping=mappings[condition];if(mapping){Object.entries(mapping).forEach(([param,value])=>{this.updateAnimationParameter(param,value);});}}getRandomValue(min,max){return Math.random()*(max-min)+min;}perlinNoise(x){const noise=Math.sin(x)*Math.sin(x*2.1)*Math.sin(x*3.7);return(noise+1)/2;}getDataStats(dataPath){const connection=this.dataConnections.get(dataPath.split('.')[0]);if(!connection)return null;return{lastUpdate: connection.lastUpdate,updateInterval: connection.updateInterval,active: connection.active,data: connection.data};}getAllStats(){const stats={};this.dataConnections.forEach((connection,key)=>{stats[key]=this.getDataStats(key);});return stats;}enableDataSource(sourceName){const connection=this.dataConnections.get(sourceName);if(connection){connection.active=true;}}disableDataSource(sourceName){const connection=this.dataConnections.get(sourceName);if(connection){connection.active=false;}}setUpdateInterval(sourceName,interval){const connection=this.dataConnections.get(sourceName);if(connection){connection.updateInterval=interval;}}exportData(format='json'){const data={timestamp: Date.now(),parameters: this.animationParameters,connections:{}};this.dataConnections.forEach((connection,key)=>{data.connections[key]={type: connection.type,active: connection.active,lastUpdate: connection.lastUpdate,data: connection.data};});if(format==='json'){return JSON.stringify(data,null,2);}return data;}createDataDashboard(){const dashboard=document.createElement('div');dashboard.id='data-dashboard';dashboard.style.cssText=` position: fixed;top: 10px;right: 10px;width: 300px;background: rgba(0,0,0,0.8);color: #00ff00;padding: 10px;border-radius: 8px;font-family: 'JetBrains Mono',monospace;font-size: 10px;z-index: 10000;max-height: 400px;overflow-y: auto;backdrop-filter: blur(10px);`;document.body.appendChild(dashboard);setInterval(()=>{this.updateDashboard(dashboard);},100);return dashboard;}updateDashboard(dashboard){const stats=this.getAllStats();let html='<h3>🔬 实时数据监控</h3>';html+=`<div>动画参数: ${JSON.stringify(this.animationParameters,null,1)}</div><br>`;Object.entries(stats).forEach(([key,data])=>{if(data && data.active){html+=`<div><strong>${key}:</strong><br>`;html+=` 最后更新: ${new Date(data.lastUpdate).toLocaleTimeString()}<br>`;html+=` 数据: ${JSON.stringify(data.data,null,1)}<br>`;html+='</div><br>';}});dashboard.innerHTML=html;}}window.dataVisualization=new DataVisualizationEnhancement();