class FrontendResourceManager{constructor(){this.resources={css: [],js: [],missing: [],errors: []};this.init();}init(){console.log('🚀 AlingAi Pro 前端资源管理器启动');this.scanExistingResources();this.validateResourceReferences();this.generateResourceMap();this.setupAutoloader();}scanExistingResources(){const cssLinks=document.querySelectorAll('link[rel="stylesheet"]');cssLinks.forEach(link=>{this.resources.css.push({href: link.href,element: link,loaded: !link.sheet ? false : true});});const jsScripts=document.querySelectorAll('script[src]');jsScripts.forEach(script=>{this.resources.js.push({src: script.src,element: script,loaded: script.complete || script.readyState==='complete'});});console.log(`📊 发现资源: CSS ${this.resources.css.length}个,JS ${this.resources.js.length}个`);}async validateResourceReferences(){console.log('🔍 验证资源引用...');for(const css of this.resources.css){try{const response=await fetch(css.href,{method: 'HEAD'});if(!response.ok){this.resources.missing.push({type: 'css',url: css.href,error: `HTTP ${response.status}`});}}catch(error){this.resources.missing.push({type: 'css',url: css.href,error: error.message});}}for(const js of this.resources.js){try{const response=await fetch(js.src,{method: 'HEAD'});if(!response.ok){this.resources.missing.push({type: 'js',url: js.src,error: `HTTP ${response.status}`});}}catch(error){this.resources.missing.push({type: 'js',url: js.src,error: error.message});}}if(this.resources.missing.length > 0){console.warn('⚠️ 发现缺失资源:',this.resources.missing);}else{console.log('✅ 所有资源引用有效');}}generateResourceMap(){this.resourceMap={'bootstrap': '/assets/libs/bootstrap/css/bootstrap.min.css','fontawesome': '/assets/libs/fontawesome/css/all.min.css','animate': '/assets/libs/animate/animate.min.css','main-style': '/assets/css/style.css','chat-style': '/assets/css/chat.css','admin-style': '/assets/css/admin.css','enhanced-style': '/assets/css/enhanced.css','jquery': '/assets/libs/jquery/jquery.min.js','bootstrap-js': '/assets/libs/bootstrap/js/bootstrap.bundle.min.js','threejs': '/assets/libs/three/three.min.js','chat-system': '/assets/js/chat-system.js','quantum-particles': '/assets/js/quantum-particles.js','admin-panel': '/assets/js/admin-panel.js','system-health': '/assets/js/system-health-checker.js','environment-checker': '/assets/js/environment-checker.js','comprehensive-test': '/assets/js/comprehensive-test.js','localStorage-migrator': '/assets/js/migration/localStorage-migrator.js','enhanced-admin': '/assets/js/enhanced-admin.js','profile-enhanced': '/assets/js/profile-enhanced.js'};console.log('📋 资源映射生成完成');}async loadResource(name,type='auto'){if(!this.resourceMap[name]){console.error(`❌ 未知资源: ${name}`);return false;}const url=this.resourceMap[name];const fileType=type==='auto' ? this.getFileType(url): type;try{if(fileType==='css'){return await this.loadCSS(url);}else if(fileType==='js'){return await this.loadJS(url);}}catch(error){console.error(`❌ 加载资源失败 ${name}:`,error);return false;}}loadCSS(url){return new Promise((resolve,reject)=>{const existing=document.querySelector(`link[href="${url}"]`);if(existing){resolve(true);return;}const link=document.createElement('link');link.rel='stylesheet';link.href=url;link.onload=()=>{console.log(`✅ CSS加载成功: ${url}`);resolve(true);};link.onerror=()=>{console.error(`❌ CSS加载失败: ${url}`);reject(new Error(`Failed to load CSS: ${url}`));};document.head.appendChild(link);});}loadJS(url){return new Promise((resolve,reject)=>{const existing=document.querySelector(`script[src="${url}"]`);if(existing){resolve(true);return;}const script=document.createElement('script');script.src=url;script.async=true;script.onload=()=>{console.log(`✅ JS加载成功: ${url}`);resolve(true);};script.onerror=()=>{console.error(`❌ JS加载失败: ${url}`);reject(new Error(`Failed to load JS: ${url}`));};document.head.appendChild(script);});}getFileType(url){const extension=url.split('.').pop().toLowerCase();if(extension==='css')return 'css';if(extension==='js')return 'js';return 'unknown';}setupAutoloader(){const pathname=window.location.pathname;if(pathname.includes('admin')){this.loadAdminResources();}else if(pathname.includes('profile')){this.loadProfileResources();}else if(pathname.includes('chat')){this.loadChatResources();}this.loadCommonResources();}async loadAdminResources(){console.log('🔧 加载管理员页面资源...');const adminResources=[ 'admin-style','enhanced-style','admin-panel','system-health','enhanced-admin' ];for(const resource of adminResources){await this.loadResource(resource);}}async loadProfileResources(){console.log('👤 加载个人中心资源...');const profileResources=[ 'enhanced-style','profile-enhanced','localStorage-migrator' ];for(const resource of profileResources){await this.loadResource(resource);}}async loadChatResources(){console.log('💬 加载聊天页面资源...');const chatResources=[ 'chat-style','chat-system','quantum-particles','threejs' ];for(const resource of chatResources){await this.loadResource(resource);}}async loadCommonResources(){console.log('🌍 加载通用资源...');const commonResources=[ 'system-health','environment-checker' ];for(const resource of commonResources){await this.loadResource(resource);}}getStatusReport(){return{total_css: this.resources.css.length,total_js: this.resources.js.length,missing_count: this.resources.missing.length,missing_resources: this.resources.missing,resource_map_size: Object.keys(this.resourceMap).length,timestamp: new Date().toISOString()};}async fixMissingResources(){console.log('🔧 尝试修复缺失资源...');for(const missing of this.resources.missing){try{const alternativeUrl=this.getAlternativeUrl(missing.url);if(alternativeUrl){await this.loadResource(alternativeUrl,missing.type);console.log(`✅ 成功修复: ${missing.url}-> ${alternativeUrl}`);}}catch(error){console.error(`❌ 修复失败: ${missing.url}`,error);}}}getAlternativeUrl(originalUrl){const cdnMapping={'bootstrap': 'https: 'fontawesome': 'https: 'jquery': 'https: 'threejs': 'https:};for(const [key,url] of Object.entries(cdnMapping)){if(originalUrl.includes(key)){return url;}}return null;}}if(typeof window !=='undefined'){window.frontendResourceManager=new FrontendResourceManager();window.loadResource=(name,type)=> window.frontendResourceManager.loadResource(name,type);window.getResourceStatus=()=> window.frontendResourceManager.getStatusReport();window.fixResources=()=> window.frontendResourceManager.fixMissingResources();}