document.addEventListener('DOMContentLoaded',function(){console.log('🚀 前端修复脚本已加载');const loginBtn=document.getElementById('login-btn');const loginModal=document.getElementById('login-modal');if(loginBtn && loginModal){loginBtn.addEventListener('click',function(e){e.preventDefault();console.log('🔓 登录按钮被点击');showLoginModal();});}function showLoginModal(){if(loginModal){loginModal.classList.remove('hidden');loginModal.classList.add('flex');const modalCard=loginModal.querySelector('.glass-card');if(modalCard){modalCard.classList.add('modal-enter');modalCard.classList.remove('scale-95','opacity-0');modalCard.classList.add('scale-100','opacity-100');}document.body.style.overflow='hidden';console.log('✅ 登录模态窗口已显示');}}function hideLoginModal(){if(loginModal){const modalCard=loginModal.querySelector('.glass-card');if(modalCard){modalCard.classList.add('modal-exit');modalCard.classList.remove('scale-100','opacity-100');modalCard.classList.add('scale-95','opacity-0');}setTimeout(()=>{loginModal.classList.add('hidden');loginModal.classList.remove('flex');document.body.style.overflow='';},300);console.log('✅ 登录模态窗口已隐藏');}}const closeLoginModal=loginModal ? loginModal.querySelector('.login-modal-close'): null;if(closeLoginModal){closeLoginModal.addEventListener('click',hideLoginModal);}if(loginModal){loginModal.addEventListener('click',function(e){if(e.target===this){hideLoginModal();}});}document.addEventListener('keydown',function(e){if(e.key==='Escape' && !loginModal.classList.contains('hidden')){hideLoginModal();}});function enhanceContentVisibility(){const sections=['#products','#technology'];sections.forEach(selector=>{const section=document.querySelector(selector);if(section){section.style.opacity='1';section.style.visibility='visible';const cards=section.querySelectorAll('.product-card-enhanced,.glass-card');cards.forEach((card,index)=>{card.style.animationDelay=`${index*0.2}s`;card.classList.add('animate-fade-in-up');});}});}function setupButtonEvents(){const learnMoreBtns=document.querySelectorAll('.button-enhanced-primary');learnMoreBtns.forEach(btn=>{if(btn.textContent.includes('了解更多')){btn.addEventListener('click',function(e){e.preventDefault();console.log('🔍 了解更多按钮被点击');const productsSection=document.getElementById('products');if(productsSection){productsSection.scrollIntoView({behavior: 'smooth'});}this.style.transform='scale(0.95)';setTimeout(()=>{this.style.transform='';},150);});}});const demoBtns=document.querySelectorAll('.button-enhanced-secondary');demoBtns.forEach(btn=>{if(btn.textContent.includes('预约演示')){btn.addEventListener('click',function(e){e.preventDefault();console.log('📅 预约演示按钮被点击');showDemoModal();this.style.transform='scale(0.95)';setTimeout(()=>{this.style.transform='';},150);});}});}function showDemoModal(){const modal=document.createElement('div');modal.className='fixed inset-0 bg-black/50 flex items-center justify-center z-50';modal.innerHTML=` <div class="glass-card max-w-md w-full m-4 p-6"> <div class="flex justify-between items-center mb-4"> <h3 class="text-xl font-bold">预约演示</h3> <button class="text-gray-400 hover:text-white transition-colors" onclick="this.closest('.fixed').remove()"> <i class="fas fa-times"></i> </button> </div> <div class="space-y-4"> <div> <label class="block text-sm font-medium mb-2">姓名</label> <input type="text" class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="请输入您的姓名"> </div> <div> <label class="block text-sm font-medium mb-2">邮箱</label> <input type="email" class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="请输入您的邮箱"> </div> <div> <label class="block text-sm font-medium mb-2">公司名称</label> <input type="text" class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="请输入公司名称"> </div> <div class="flex gap-3 pt-4"> <button class="button-enhanced-primary flex-1" onclick="alert('预约演示功能开发中...');this.closest('.fixed').remove();"> 立即预约 </button> <button class="button-enhanced-secondary flex-1" onclick="this.closest('.fixed').remove();"> 取消 </button> </div> </div> </div> `;document.body.appendChild(modal);}function setupLanguageSwitch(){const langSelector=document.querySelector('.lang-selector-enhanced');if(langSelector){langSelector.addEventListener('click',function(){console.log('🌐 语言选择器被点击');showLanguageOptions();});}const mobileSelect=document.querySelector('#mobileMenu select');if(mobileSelect){mobileSelect.addEventListener('change',function(){switchLanguage(this.value);});}}function showLanguageOptions(){const dropdown=document.createElement('div');dropdown.className='absolute top-full right-0 mt-2 bg-gray-800 border border-gray-600 rounded-lg shadow-lg z-50';dropdown.innerHTML=` <div class="py-2"> <button class="w-full px-4 py-2 text-left hover:bg-gray-700 transition-colors" onclick="switchLanguage('zh');this.closest('div').remove();"> 🇨🇳 中文 </button> <button class="w-full px-4 py-2 text-left hover:bg-gray-700 transition-colors" onclick="switchLanguage('en');this.closest('div').remove();"> 🇺🇸 English </button> </div> `;const langSelector=document.querySelector('.lang-selector-enhanced');langSelector.style.position='relative';langSelector.appendChild(dropdown);setTimeout(()=>{document.addEventListener('click',function closeDropdown(e){if(!langSelector.contains(e.target)){if(dropdown.parentNode){dropdown.remove();}document.removeEventListener('click',closeDropdown);}});},0);}window.switchLanguage=function(lang){console.log('🔄 切换语言到:',lang);const currentLang=document.querySelector('.current-lang');if(currentLang){currentLang.textContent=lang==='zh' ? '中文' : 'English';}if(lang==='en'){console.log('切换到英文模式');}else{console.log('切换到中文模式');}};function createQuantumRainbowRibbon(){const ribbon=document.createElement('div');ribbon.className='quantum-rainbow-ribbon';document.body.appendChild(ribbon);console.log('🌈 量子彩虹丝带已添加');}function enhanceQuantumModel(){const quantumContainer=document.getElementById('quantum-model');if(!quantumContainer || !window.THREE){console.warn('⚠️ Three.js未加载或量子模型容器未找到');return;}try{quantumContainer.innerHTML='';const scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(75,quantumContainer.offsetWidth/quantumContainer.offsetHeight,0.1,1000);const renderer=new THREE.WebGLRenderer({alpha: true,antialias: true});renderer.setSize(quantumContainer.offsetWidth,quantumContainer.offsetHeight);renderer.setClearColor(0x000000,0);quantumContainer.appendChild(renderer.domElement);const sphereGeometry=new THREE.SphereGeometry(1,64,64);const sphereMaterial=new THREE.ShaderMaterial({uniforms:{time:{value: 0},resolution:{value: new THREE.Vector2(quantumContainer.offsetWidth,quantumContainer.offsetHeight)}},vertexShader: ` varying vec2 vUv;varying vec3 vPosition;void main(){vUv=uv;vPosition=position;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}`,fragmentShader: ` uniform float time;varying vec2 vUv;varying vec3 vPosition;void main(){vec2 uv=vUv;vec3 deepAbyss=vec3(0.02,0.08,0.2);vec3 dragonCore=vec3(0.4,0.1,0.8);vec3 quantumEnergy=vec3(0.0,0.8,1.0);float wave1=sin(length(vPosition)*8.0-time*2.0)*0.5+0.5;float wave2=sin(length(vPosition)*12.0+time*1.5)*0.3+0.7;float pulse=sin(time*3.0)*0.3+0.7;vec3 color=mix(deepAbyss,dragonCore,wave1);color=mix(color,quantumEnergy,wave2*pulse);float codePattern=step(0.8,sin(uv.x*50.0+time)*sin(uv.y*50.0+time*0.7));color+=vec3(0.0,1.0,0.5)*codePattern*0.3;gl_FragColor=vec4(color,0.8);}`,transparent: true,wireframe: false});const sphere=new THREE.Mesh(sphereGeometry,sphereMaterial);scene.add(sphere);const ringGeometry=new THREE.RingGeometry(1.2,1.5,32);const ringMaterial=new THREE.MeshBasicMaterial({color: 0x6c13ff,transparent: true,opacity: 0.3,side: THREE.DoubleSide});const ring=new THREE.Mesh(ringGeometry,ringMaterial);ring.rotation.x=Math.PI/2;scene.add(ring);const particleCount=200;const particles=new THREE.BufferGeometry();const positions=new Float32Array(particleCount*3);const colors=new Float32Array(particleCount*3);for(let i=0;i < particleCount;i++){const i3=i*3;positions[i3]=(Math.random()-0.5)*8;positions[i3+1]=(Math.random()-0.5)*8;positions[i3+2]=(Math.random()-0.5)*8;const colorChoice=Math.random();if(colorChoice < 0.33){colors[i3]=0.0;colors[i3+1]=1.0;colors[i3+2]=1.0;}else if(colorChoice < 0.66){colors[i3]=0.4;colors[i3+1]=0.1;colors[i3+2]=1.0;}else{colors[i3]=0.0;colors[i3+1]=1.0;colors[i3+2]=0.5;}}particles.setAttribute('position',new THREE.BufferAttribute(positions,3));particles.setAttribute('color',new THREE.BufferAttribute(colors,3));const particleMaterial=new THREE.PointsMaterial({size: 0.05,vertexColors: true,transparent: true,opacity: 0.8});const particleSystem=new THREE.Points(particles,particleMaterial);scene.add(particleSystem);camera.position.z=4;function animate(){requestAnimationFrame(animate);const time=Date.now()*0.001;sphereMaterial.uniforms.time.value=time;sphere.rotation.x+=0.005;sphere.rotation.y+=0.01;ring.rotation.z+=0.02;const positions=particleSystem.geometry.attributes.position.array;for(let i=0;i < particleCount;i++){const i3=i*3;positions[i3+1]-=0.02;if(positions[i3+1] <-4){positions[i3+1]=4;positions[i3]=(Math.random()-0.5)*8;positions[i3+2]=(Math.random()-0.5)*8;}}particleSystem.geometry.attributes.position.needsUpdate=true;renderer.render(scene,camera);}animate();console.log('✨ 龙渊深邃量子球初始化成功');window.addEventListener('resize',function(){if(quantumContainer.offsetWidth > 0){camera.aspect=quantumContainer.offsetWidth/quantumContainer.offsetHeight;camera.updateProjectionMatrix();renderer.setSize(quantumContainer.offsetWidth,quantumContainer.offsetHeight);}});}catch(error){console.error('❌ 增强量子模型初始化失败:',error);quantumContainer.innerHTML=` <div class="flex items-center justify-center h-full relative"> <div class="w-32 h-32 rounded-full bg-gradient-to-r from-purple-600 via-blue-500 to-cyan-400 animate-spin relative"> <div class="absolute inset-2 rounded-full bg-gray-900 flex items-center justify-center"> <div class="text-2xl">⚛️</div> </div> </div> </div> `;}}enhanceContentVisibility();setupButtonEvents();setupLanguageSwitch();createQuantumRainbowRibbon();if(window.THREE){enhanceQuantumModel();}else{const quantumContainer=document.getElementById('quantum-model');if(quantumContainer){quantumContainer.innerHTML=` <div class="flex items-center justify-center h-full"> <div class="w-32 h-32 border-4 border-blue-500 rounded-full animate-spin border-t-transparent"></div> </div> `;}}console.log('🎉 前端修复完成！');});