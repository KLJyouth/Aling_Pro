class EnhancedUIManager{constructor(){this.isInitialized=false;this.components=new Map();this.animations=new Map();this.themes={light: 'light-theme',dark: 'dark-theme',quantum: 'quantum-theme',highContrast: 'high-contrast-theme'};this.currentTheme=localStorage.getItem('preferred-theme')|| 'quantum';this.notifications=[];this.modals=new Map();this.init();}async init(){if(this.isInitialized)return;try{await this.loadComponents();this.setupEventListeners();this.initializeTheme();this.initializeAccessibility();this.initializePerformanceMonitoring();this.isInitialized=true;console.log('🎨 Enhanced UI Manager initialized successfully');}catch(error){console.error('❌ Failed to initialize Enhanced UI Manager:',error);}}async loadComponents(){const components=[ 'NavigationComponent','ModalComponent','NotificationComponent','ChatComponent','FormComponent','AnimationComponent' ];for(const componentName of components){try{const component=await this.createComponent(componentName);this.components.set(componentName,component);}catch(error){console.warn(`⚠️ Failed to load component ${componentName}:`,error);}}}async createComponent(name){switch(name){case 'NavigationComponent': return new NavigationComponent(this);case 'ModalComponent': return new ModalComponent(this);case 'NotificationComponent': return new NotificationComponent(this);case 'ChatComponent': return new ChatComponent(this);case 'FormComponent': return new FormComponent(this);case 'AnimationComponent': return new AnimationComponent(this);default: throw new Error(`Unknown component: ${name}`);}}setupEventListeners(){document.addEventListener('keydown',(e)=>{this.handleGlobalKeyboard(e);});window.addEventListener('resize',()=>{this.handleResize();});window.addEventListener('online',()=>{this.showNotification('网络连接已恢复','success');});window.addEventListener('offline',()=>{this.showNotification('网络连接已断开','warning');});document.addEventListener('visibilitychange',()=>{this.handleVisibilityChange();});}handleGlobalKeyboard(event){const{key,ctrlKey,altKey,shiftKey}=event;if(ctrlKey && key==='k'){event.preventDefault();this.openQuickSearch();}if(ctrlKey && key==='l'){event.preventDefault();this.openModal('login');}if(ctrlKey && key==='/'){event.preventDefault();this.toggleChat();}if(ctrlKey && altKey && key==='t'){event.preventDefault();this.cycleTheme();}if(ctrlKey && altKey && key==='h'){event.preventDefault();this.toggleHighContrast();}if(key==='Escape'){this.closeAllModals();}if(key==='F1'){event.preventDefault();this.showHelp();}}handleResize(){const width=window.innerWidth;const height=window.innerHeight;document.documentElement.style.setProperty('--viewport-width',`${width}px`);document.documentElement.style.setProperty('--viewport-height',`${height}px`);this.components.forEach(component=>{if(component.handleResize){component.handleResize(width,height);}});if(width < 768){document.body.classList.add('mobile-view');this.optimizeForMobile();}else{document.body.classList.remove('mobile-view');}}optimizeForMobile(){if(window.DeviceMotionEvent){document.body.classList.add('mobile-device');}const touchElements=document.querySelectorAll('.btn,.card,.modal-trigger');touchElements.forEach(el=>{el.classList.add('touch-optimized');});}initializeTheme(){this.applyTheme(this.currentTheme);if(window.matchMedia){const mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');mediaQuery.addListener((e)=>{if(this.currentTheme==='auto'){this.applyTheme(e.matches ? 'dark' : 'light');}});}}applyTheme(themeName){document.body.className=document.body.className.replace(/\b\w+-theme\b/g,'');document.body.classList.add(this.themes[themeName] || this.themes.quantum);const themeColor=this.getThemeColor(themeName);this.updateMetaTheme(themeColor);this.currentTheme=themeName;localStorage.setItem('preferred-theme',themeName);this.components.forEach(component=>{if(component.onThemeChange){component.onThemeChange(themeName);}});}getThemeColor(theme){const colors={light: '#ffffff',dark: '#000000',quantum: '#0a0a23',highContrast: '#000000'};return colors[theme] || colors.quantum;}updateMetaTheme(color){let metaTheme=document.querySelector('meta[name="theme-color"]');if(!metaTheme){metaTheme=document.createElement('meta');metaTheme.name='theme-color';document.head.appendChild(metaTheme);}metaTheme.content=color;}cycleTheme(){const themes=Object.keys(this.themes);const currentIndex=themes.indexOf(this.currentTheme);const nextIndex=(currentIndex+1)% themes.length;this.applyTheme(themes[nextIndex]);this.showNotification(`已切换到 ${themes[nextIndex]}主题`,'info');}toggleHighContrast(){const isHighContrast=document.body.classList.contains('high-contrast');document.body.classList.toggle('high-contrast',!isHighContrast);this.showNotification(`高对比度模式已${isHighContrast ? '关闭' : '开启'}`,'info');}initializeAccessibility(){this.enhanceAccessibility();this.setupFocusManagement();this.setupScreenReaderSupport();}enhanceAccessibility(){const interactiveElements=document.querySelectorAll('button,a,input,select,textarea,[tabindex]');interactiveElements.forEach(el=>{if(!el.getAttribute('aria-label')&& !el.getAttribute('aria-labelledby')){const text=el.textContent.trim()|| el.value || el.placeholder;if(text){el.setAttribute('aria-label',text);}}});}setupFocusManagement(){let focusedBeforeModal=null;document.addEventListener('modalOpen',(e)=>{focusedBeforeModal=document.activeElement;const modal=e.detail.modal;const firstFocusable=modal.querySelector('button,[href],input,select,textarea,[tabindex]:not([tabindex="-1"])');if(firstFocusable){firstFocusable.focus();}});document.addEventListener('modalClose',()=>{if(focusedBeforeModal){focusedBeforeModal.focus();}});}setupScreenReaderSupport(){const liveRegion=document.createElement('div');liveRegion.setAttribute('aria-live','polite');liveRegion.setAttribute('aria-atomic','true');liveRegion.className='sr-only';liveRegion.id='live-announcements';document.body.appendChild(liveRegion);this.liveRegion=liveRegion;}announceToScreenReader(message){if(this.liveRegion){this.liveRegion.textContent=message;setTimeout(()=>{this.liveRegion.textContent='';},1000);}}initializePerformanceMonitoring(){if('PerformanceObserver' in window){const observer=new PerformanceObserver((list)=>{list.getEntries().forEach(entry=>{if(entry.entryType==='largest-contentful-paint'){console.log(`LCP: ${entry.startTime}ms`);}});});observer.observe({entryTypes: ['largest-contentful-paint']});}if('memory' in performance){setInterval(()=>{const memory=performance.memory;if(memory.usedJSHeapSize > memory.jsHeapSizeLimit*0.9){console.warn('⚠️ Memory usage is getting high');this.optimizeMemoryUsage();}},30000);}}optimizeMemoryUsage(){this.components.forEach((component,name)=>{if(component.cleanup && !component.isActive){component.cleanup();}});this.notifications=this.notifications.slice(-10);if(window.gc){window.gc();}}openModal(modalType,options={}){const modalComponent=this.components.get('ModalComponent');if(modalComponent){return modalComponent.open(modalType,options);}}closeModal(modalId){const modalComponent=this.components.get('ModalComponent');if(modalComponent){modalComponent.close(modalId);}}closeAllModals(){const modalComponent=this.components.get('ModalComponent');if(modalComponent){modalComponent.closeAll();}}showNotification(message,type='info',duration=5000){const notificationComponent=this.components.get('NotificationComponent');if(notificationComponent){return notificationComponent.show(message,type,duration);}}toggleChat(){const chatComponent=this.components.get('ChatComponent');if(chatComponent){chatComponent.toggle();}}openQuickSearch(){const searchModal=this.openModal('search',{title: '快速搜索',placeholder: '搜索功能、页面或内容...'});}showHelp(){const helpContent=` <div class="help-content"> <h3>键盘快捷键</h3> <ul> <li><kbd>Ctrl</kbd>+<kbd>K</kbd>-快速搜索</li> <li><kbd>Ctrl</kbd>+<kbd>L</kbd>-登录</li> <li><kbd>Ctrl</kbd>+<kbd>/</kbd>-切换聊天</li> <li><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>T</kbd>-切换主题</li> <li><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>H</kbd>-高对比度模式</li> <li><kbd>ESC</kbd>-关闭模态框</li> <li><kbd>F1</kbd>-显示帮助</li> </ul> </div> `;this.openModal('help',{title: '帮助与快捷键',content: helpContent});}handleVisibilityChange(){if(document.hidden){this.pauseAnimations();}else{this.resumeAnimations();}}pauseAnimations(){document.body.classList.add('animations-paused');}resumeAnimations(){document.body.classList.remove('animations-paused');}getComponent(name){return this.components.get(name);}destroy(){this.components.forEach(component=>{if(component.destroy){component.destroy();}});this.components.clear();this.animations.clear();this.notifications=[];this.isInitialized=false;}}window.EnhancedUIManager=EnhancedUIManager;