async function loadConversationHistory(userName) { try { if (!userName) { console.error('加载历史会话失败: 用户名不能为空'); return { success: false, error: '用户名不能为空', history: [] }; } const requestUrl = `${API_ENDPOINTS.HISTORY_MESSAGES}?user=${encodeURIComponent(userName)}`;  const response = await authFetch(requestUrl); if (!response.ok) { const errorText = await response.text(); console.error('历史会话API响应错误:', { status: response.status, statusText: response.statusText, errorText }); return { success: false, error: `请求失败: ${response.status}`, history: [] }; } const data = await response.json();  if (!data || typeof data !== 'object') { return { success: false, error: '无效的响应格式', history: [] }; } return { success: data.success === false ? false : true, error: data.error || '', history: data.history || data.messages || [] }; } catch (error) { console.error('加载历史会话异常:', error); return { success: false, error: error.message || '加载历史会话失败', history: [] }; } } async function deleteConversation(messageId, userName) { try { if (!messageId) { console.error('删除会话失败: 消息ID不能为空'); return false; } const requestUrl = `${API_ENDPOINTS.HISTORY_MESSAGES}/${messageId}`; const queryParams = userName ? `?user=${encodeURIComponent(userName)}` : ''; const response = await authFetch(`${requestUrl}${queryParams}`, { method: 'DELETE' }); if (!response.ok) { const errorText = await response.text(); console.error('删除会话API响应错误:', { status: response.status, statusText: response.statusText, errorText }); return false; } const data = await response.json(); return data.success === true; } catch (error) { console.error('删除会话异常:', error); return false; } } if (typeof window !== 'undefined') { window.loadConversationHistory = loadConversationHistory; window.deleteConversation = deleteConversation; } if (typeof module !== 'undefined' && module.exports) { module.exports = { loadConversationHistory, deleteConversation }; }