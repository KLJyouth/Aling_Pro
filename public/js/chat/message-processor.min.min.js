export class MessageProcessor{static formatDate(timestamp){const date=new Date(timestamp);return date.toLocaleString('zh-CN',{month: 'short',day: 'numeric',hour: '2-digit',minute: '2-digit'});}static processMarkdown(text){try{const processCodeBlocks=(text)=>{const codeBlockRegex=/```(\w*)\n([\s\S]*?)```/g;return text.replace(codeBlockRegex,(match,lang,code)=>{try{const highlighted=hljs.highlightAuto(code.trim(),lang ? [lang] : undefined).value;return `<pre><code class="hljs ${lang || ''}">${highlighted}</code></pre>`;}catch(error){console.warn('Code highlighting failed:',error);return `<pre><code class="${lang || ''}">${this.escapeHtml(code.trim())}</code></pre>`;}});};const processInlineCode=(text)=>{return text.replace(/`([^`]+)`/g,'<code>$1</code>');};const processMathExpressions=(text)=>{text=text.replace(/\$([^\$]+)\$/g,'<span class="math-inline">$1</span>');text=text.replace(/\$\$([^\$]+)\$\$/g,'<div class="math-block">$1</div>');return text;};const processTables=(text)=>{return text.replace(/\|.*\|/g,(match)=>{if(match.includes('|-'))return match;return `<div class="table-row">${match}</div>`;});};text=processCodeBlocks(text);text=processInlineCode(text);text=processMathExpressions(text);text=processTables(text);return marked.parse(text,{gfm: true,breaks: true,sanitize: true});}catch(error){console.error('Markdown processing failed:',error);return this.escapeHtml(text);}}static escapeHtml(text){const div=document.createElement('div');div.textContent=text;return div.innerHTML;}static async createMessageElement(role,content,metadata={}){const contentDiv=document.createElement('div');contentDiv.className='message-content';try{switch(metadata.type){case 'image': await this.handleImageMessage(contentDiv,content,metadata);break;case 'code': this.handleCodeMessage(contentDiv,content,metadata);break;case 'error': this.handleErrorMessage(contentDiv,content);break;default: contentDiv.innerHTML=this.processMarkdown(content);}if(Object.keys(metadata).length > 0){this.appendMetadata(contentDiv,metadata);}}catch(error){console.error('Message processing failed:',error);contentDiv.innerHTML=`<div class="error-message">消息处理失败</div>`;}return contentDiv;}static async handleImageMessage(container,content,metadata){const img=document.createElement('img');img.src=content;img.alt=metadata.description || '生成的图片';img.className='img-fluid rounded';img.loading='lazy';img.onerror=()=>{container.innerHTML='<div class="error-message">图片加载失败</div>';};container.appendChild(img);if(metadata.description){const description=document.createElement('p');description.className='mt-2 text-muted small';description.textContent=metadata.description;container.appendChild(description);}}static handleCodeMessage(container,content,metadata){const pre=document.createElement('pre');const code=document.createElement('code');code.className=`language-${metadata.language || 'plaintext'}`;code.textContent=content;pre.appendChild(code);container.appendChild(pre);const copyButton=document.createElement('button');copyButton.className='copy-button';copyButton.innerHTML='<i class="bi bi-clipboard"></i>';copyButton.onclick=()=> navigator.clipboard.writeText(content);container.appendChild(copyButton);}static handleErrorMessage(container,content){container.innerHTML=` <div class="error-message"> <i class="bi bi-exclamation-triangle-fill"></i> <span>${this.escapeHtml(content)}</span> </div> `;}static appendMetadata(container,metadata){const metaDiv=document.createElement('div');metaDiv.className='message-metadata';if(metadata.model){const modelSpan=document.createElement('span');modelSpan.className='model-info';modelSpan.textContent=`Model: ${metadata.model}`;metaDiv.appendChild(modelSpan);}if(metadata.processingTime){const timeSpan=document.createElement('span');timeSpan.className='processing-time';timeSpan.textContent=`处理时间: ${metadata.processingTime}ms`;metaDiv.appendChild(timeSpan);}container.appendChild(metaDiv);}static processUserMessage(content){if(!content || typeof content !=='string'){return '';}try{const escaped=this.escapeHtml(content);const withBreaks=escaped.replace(/\n/g,'<br>');let processed=withBreaks;processed=processed.replace(/\*\*(.*?)\*\*/g,'<strong>$1</strong>');processed=processed.replace(/\*(.*?)\*/g,'<em>$1</em>');processed=processed.replace(/`(.*?)`/g,'<code>$1</code>');return processed;}catch(error){console.error('Error processing user message:',error);return this.escapeHtml(content);}}static processAssistantMessage(content){if(!content || typeof content !=='string'){return '';}try{return this.processMarkdown(content);}catch(error){console.error('Error processing assistant message:',error);return this.escapeHtml(content).replace(/\n/g,'<br>');}}}