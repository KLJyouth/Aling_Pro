{# 用户个人资料页面 #}
{% extends "layouts/app.twig" %}

{% block title %}{{ trans('user_profile') }} - {{ parent() }}{% endblock %}

{% block head_styles %}
<link href="{{ asset('css/profile.css') }}" rel="stylesheet">
<link href="{{ asset('vendor/cropperjs/cropper.min.css') }}" rel="stylesheet">
<style>
    .profile-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 3rem 0;
        position: relative;
        overflow: hidden;
    }
    
    .profile-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"><animate attributeName="opacity" values="0;1;0" dur="3s" repeatCount="indefinite"/></circle><circle cx="80" cy="40" r="1.5" fill="rgba(255,255,255,0.1)"><animate attributeName="opacity" values="0;1;0" dur="2s" repeatCount="indefinite" begin="1s"/></circle><circle cx="40" cy="80" r="1" fill="rgba(255,255,255,0.1)"><animate attributeName="opacity" values="0;1;0" dur="4s" repeatCount="indefinite" begin="2s"/></circle></svg>');
        pointer-events: none;
    }
    
    .avatar-section {
        position: relative;
        display: inline-block;
    }
    
    .avatar-upload {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 40px;
        height: 40px;
        background: #007bff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
    }
    
    .avatar-upload:hover {
        background: #0056b3;
        transform: scale(1.1);
    }
    
    .profile-stats {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-top: -50px;
        position: relative;
        z-index: 2;
    }
    
    .stat-item {
        text-align: center;
        padding: 1rem;
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
        display: block;
    }
    
    .stat-label {
        color: #6c757d;
        font-size: 0.875rem;
        margin-top: 0.5rem;
    }
    
    .activity-timeline {
        position: relative;
        padding-left: 2rem;
    }
    
    .activity-timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: linear-gradient(to bottom, #007bff, #6c757d);
    }
    
    .activity-item {
        position: relative;
        padding: 1rem 0;
        margin-left: 1rem;
    }
    
    .activity-item::before {
        content: '';
        position: absolute;
        left: -2rem;
        top: 1.5rem;
        width: 12px;
        height: 12px;
        background: #007bff;
        border-radius: 50%;
        border: 3px solid white;
        box-shadow: 0 0 0 3px #007bff;
    }
    
    .security-item {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        border-left: 4px solid #007bff;
        transition: all 0.3s ease;
    }
    
    .security-item:hover {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        transform: translateY(-2px);
    }
    
    .notification-item {
        background: white;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 0.5rem;
        border-left: 3px solid #28a745;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .avatar-cropper-modal .modal-dialog {
        max-width: 600px;
    }
    
    .cropper-container {
        max-height: 400px;
    }
    
    @media (max-width: 768px) {
        .profile-header {
            padding: 2rem 0;
        }
        
        .profile-stats {
            margin-top: -30px;
            padding: 1.5rem;
        }
        
        .stat-item {
            padding: 0.5rem;
        }
        
        .activity-timeline {
            padding-left: 1rem;
        }
    }
</style>
{% endblock %}

{% block content %}
<!-- 个人资料头部 -->
<div class="profile-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-4 text-center">
                <div class="avatar-section">
                    <img src="{{ user.avatar ? asset('uploads/avatars/' ~ user.avatar) : asset('images/default-avatar.png') }}" 
                         alt="{{ user.name }}" 
                         class="rounded-circle"
                         style="width: 120px; height: 120px; object-fit: cover; border: 4px solid rgba(255,255,255,0.3);">
                    <div class="avatar-upload" data-bs-toggle="modal" data-bs-target="#avatarCropperModal">
                        <i class="bi bi-camera-fill text-white"></i>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <h1 class="mb-2">{{ user.name }}</h1>
                <p class="mb-1"><i class="bi bi-envelope me-2"></i>{{ user.email }}</p>
                <p class="mb-1"><i class="bi bi-calendar me-2"></i>{{ trans('joined') }}: {{ user.created_at|date('Y年m月d日') }}</p>
                {% if user.last_login_at %}
                <p class="mb-0"><i class="bi bi-clock me-2"></i>{{ trans('last_login') }}: {{ user.last_login_at|date('Y-m-d H:i') }}</p>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<!-- 用户统计 -->
<div class="container">
    <div class="profile-stats">
        <div class="row">
            <div class="col-md-3 col-sm-6">
                <div class="stat-item">
                    <span class="stat-number">{{ user.conversations_count ?? 0 }}</span>
                    <div class="stat-label">{{ trans('total_conversations') }}</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="stat-item">
                    <span class="stat-number">{{ user.messages_count ?? 0 }}</span>
                    <div class="stat-label">{{ trans('total_messages') }}</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="stat-item">
                    <span class="stat-number">{{ user.documents_count ?? 0 }}</span>
                    <div class="stat-label">{{ trans('uploaded_documents') }}</div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="stat-item">
                    <span class="stat-number">{{ (user.created_at|date_diff(date()).days) ?? 0 }}</span>
                    <div class="stat-label">{{ trans('member_days') }}</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 主要内容区域 -->
<div class="container mt-5">
    <div class="row">
        <!-- 左侧：个人信息编辑 -->
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="bi bi-person-gear me-2"></i>{{ trans('personal_information') }}</h5>
                </div>
                <div class="card-body">
                    <form id="profileForm" action="{{ url('profile/update') }}" method="POST">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="name" class="form-label">{{ trans('full_name') }}</label>
                                    <input type="text" class="form-control" id="name" name="name" value="{{ user.name }}" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="email" class="form-label">{{ trans('email_address') }}</label>
                                    <input type="email" class="form-control" id="email" name="email" value="{{ user.email }}" required>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="phone" class="form-label">{{ trans('phone_number') }}</label>
                                    <input type="tel" class="form-control" id="phone" name="phone" value="{{ user.phone ?? '' }}">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="timezone" class="form-label">{{ trans('timezone') }}</label>
                                    <select class="form-select" id="timezone" name="timezone">
                                        <option value="Asia/Shanghai" {{ (user.timezone ?? 'Asia/Shanghai') == 'Asia/Shanghai' ? 'selected' : '' }}>{{ trans('beijing_time') }}</option>
                                        <option value="UTC" {{ (user.timezone ?? '') == 'UTC' ? 'selected' : '' }}>UTC</option>
                                        <option value="America/New_York" {{ (user.timezone ?? '') == 'America/New_York' ? 'selected' : '' }}>{{ trans('eastern_time') }}</option>
                                        <option value="Europe/London" {{ (user.timezone ?? '') == 'Europe/London' ? 'selected' : '' }}>{{ trans('london_time') }}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="bio" class="form-label">{{ trans('biography') }}</label>
                            <textarea class="form-control" id="bio" name="bio" rows="3" placeholder="{{ trans('tell_us_about_yourself') }}">{{ user.bio ?? '' }}</textarea>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="company" class="form-label">{{ trans('company') }}</label>
                                    <input type="text" class="form-control" id="company" name="company" value="{{ user.company ?? '' }}">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="website" class="form-label">{{ trans('website') }}</label>
                                    <input type="url" class="form-control" id="website" name="website" value="{{ user.website ?? '' }}">
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-outline-secondary me-2" onclick="resetForm()">{{ trans('reset') }}</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-lg me-1"></i>{{ trans('save_changes') }}
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- 最近活动 -->
            <div class="card shadow-sm mt-4">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="bi bi-activity me-2"></i>{{ trans('recent_activity') }}</h5>
                </div>
                <div class="card-body">
                    <div class="activity-timeline">
                        {% for activity in user.recent_activities ?? [] %}
                        <div class="activity-item">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">{{ activity.title }}</h6>
                                    <p class="text-muted mb-1">{{ activity.description }}</p>
                                    <small class="text-muted">{{ activity.created_at|date('Y-m-d H:i') }}</small>
                                </div>
                                <span class="badge bg-{{ activity.type == 'login' ? 'success' : (activity.type == 'error' ? 'danger' : 'info') }}">
                                    {{ trans(activity.type) }}
                                </span>
                            </div>
                        </div>
                        {% else %}
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-clock-history display-4 d-block mb-2"></i>
                            <p>{{ trans('no_recent_activity') }}</p>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
        
        <!-- 右侧：安全设置和通知 -->
        <div class="col-lg-4">
            <!-- 安全设置 -->
            <div class="card shadow-sm">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="bi bi-shield-check me-2"></i>{{ trans('security_settings') }}</h5>
                </div>
                <div class="card-body p-0">
                    <div class="security-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">{{ trans('change_password') }}</h6>
                                <small class="text-muted">{{ trans('last_changed') }}: {{ user.password_changed_at|date('Y-m-d') ?? trans('never') }}</small>
                            </div>
                            <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                                {{ trans('change') }}
                            </button>
                        </div>
                    </div>
                    
                    <div class="security-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">{{ trans('two_factor_auth') }}</h6>
                                <small class="text-muted">
                                    {% if user.two_factor_enabled %}
                                        <span class="text-success">{{ trans('enabled') }}</span>
                                    {% else %}
                                        <span class="text-danger">{{ trans('disabled') }}</span>
                                    {% endif %}
                                </small>
                            </div>
                            <button class="btn btn-sm btn-outline-{{ user.two_factor_enabled ? 'danger' : 'success' }}" onclick="toggle2FA()">
                                {{ user.two_factor_enabled ? trans('disable') : trans('enable') }}
                            </button>
                        </div>
                    </div>
                    
                    <div class="security-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">{{ trans('active_sessions') }}</h6>
                                <small class="text-muted">{{ trans('manage_login_sessions') }}</small>
                            </div>
                            <button class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#activeSessionsModal">
                                {{ trans('view') }}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- 通知设置 -->
            <div class="card shadow-sm mt-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="bi bi-bell me-2"></i>{{ trans('notification_settings') }}</h5>
                </div>
                <div class="card-body">
                    <form id="notificationForm" action="{{ url('profile/notifications') }}" method="POST">
                        <div class="notification-item">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="emailNotifications" name="email_notifications" 
                                       {{ (user.preferences.email_notifications ?? true) ? 'checked' : '' }}>
                                <label class="form-check-label" for="emailNotifications">
                                    <strong>{{ trans('email_notifications') }}</strong><br>
                                    <small class="text-muted">{{ trans('receive_important_updates') }}</small>
                                </label>
                            </div>
                        </div>
                        
                        <div class="notification-item">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="smsNotifications" name="sms_notifications"
                                       {{ (user.preferences.sms_notifications ?? false) ? 'checked' : '' }}>
                                <label class="form-check-label" for="smsNotifications">
                                    <strong>{{ trans('sms_notifications') }}</strong><br>
                                    <small class="text-muted">{{ trans('receive_sms_alerts') }}</small>
                                </label>
                            </div>
                        </div>
                        
                        <div class="notification-item">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="browserNotifications" name="browser_notifications"
                                       {{ (user.preferences.browser_notifications ?? true) ? 'checked' : '' }}>
                                <label class="form-check-label" for="browserNotifications">
                                    <strong>{{ trans('browser_notifications') }}</strong><br>
                                    <small class="text-muted">{{ trans('show_desktop_notifications') }}</small>
                                </label>
                            </div>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-info">
                                <i class="bi bi-check-lg me-1"></i>{{ trans('save_preferences') }}
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 头像裁剪模态框 -->
<div class="modal fade avatar-cropper-modal" id="avatarCropperModal" tabindex="-1" aria-labelledby="avatarCropperModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="avatarCropperModalLabel">{{ trans('upload_avatar') }}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <input type="file" class="form-control" id="avatarInput" accept="image/*">
                </div>
                <div class="cropper-container">
                    <img id="cropperImage" style="max-width: 100%; display: none;">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ trans('cancel') }}</button>
                <button type="button" class="btn btn-primary" id="cropAndUpload">{{ trans('crop_and_upload') }}</button>
            </div>
        </div>
    </div>
</div>

<!-- 修改密码模态框 -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">{{ trans('change_password') }}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm" action="{{ url('profile/change-password') }}" method="POST">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">{{ trans('current_password') }}</label>
                        <input type="password" class="form-control" id="currentPassword" name="current_password" required>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">{{ trans('new_password') }}</label>
                        <input type="password" class="form-control" id="newPassword" name="new_password" required minlength="8">
                        <div class="form-text">{{ trans('password_requirements') }}</div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">{{ trans('confirm_new_password') }}</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirm_password" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ trans('cancel') }}</button>
                <button type="submit" form="changePasswordForm" class="btn btn-primary">{{ trans('change_password') }}</button>
            </div>
        </div>
    </div>
</div>

<!-- 活跃会话模态框 -->
<div class="modal fade" id="activeSessionsModal" tabindex="-1" aria-labelledby="activeSessionsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="activeSessionsModalLabel">{{ trans('active_sessions') }}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="sessionsContainer">
                <!-- 会话列表将通过AJAX加载 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="terminateAllSessions()">{{ trans('terminate_all_other_sessions') }}</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ trans('close') }}</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block body_scripts %}
<script src="{{ asset('vendor/cropperjs/cropper.min.js') }}"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    let cropper = null;
    const avatarInput = document.getElementById('avatarInput');
    const cropperImage = document.getElementById('cropperImage');
    const cropAndUploadBtn = document.getElementById('cropAndUpload');
    
    // 头像上传处理
    avatarInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                cropperImage.src = e.target.result;
                cropperImage.style.display = 'block';
                
                if (cropper) {
                    cropper.destroy();
                }
                
                cropper = new Cropper(cropperImage, {
                    aspectRatio: 1,
                    viewMode: 1,
                    dragMode: 'move',
                    autoCropArea: 0.8,
                    restore: false,
                    guides: false,
                    center: false,
                    highlight: false,
                    cropBoxMovable: false,
                    cropBoxResizable: true,
                    toggleDragModeOnDblclick: false,
                });
            };
            reader.readAsDataURL(file);
        }
    });
    
    // 裁剪并上传
    cropAndUploadBtn.addEventListener('click', function() {
        if (cropper) {
            const canvas = cropper.getCroppedCanvas({
                width: 200,
                height: 200,
                imageSmoothingEnabled: true,
                imageSmoothingQuality: 'high',
            });
            
            canvas.toBlob(function(blob) {
                const formData = new FormData();
                formData.append('avatar', blob, 'avatar.jpg');
                
                fetch('{{ url("profile/upload-avatar") }}', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || '{{ trans("upload_failed") }}');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('{{ trans("upload_error") }}');
                });
            }, 'image/jpeg', 0.9);
        }
    });
    
    // 个人信息表单提交
    document.getElementById('profileForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        
        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('{{ trans("profile_updated_successfully") }}', 'success');
            } else {
                showNotification(data.message || '{{ trans("update_failed") }}', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('{{ trans("update_error") }}', 'error');
        });
    });
    
    // 通知设置表单提交
    document.getElementById('notificationForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        
        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('{{ trans("preferences_saved") }}', 'success');
            } else {
                showNotification(data.message || '{{ trans("save_failed") }}', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('{{ trans("save_error") }}', 'error');
        });
    });
    
    // 密码修改表单提交
    document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        if (newPassword !== confirmPassword) {
            showNotification('{{ trans("passwords_do_not_match") }}', 'error');
            return;
        }
        
        const formData = new FormData(this);
        
        fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('{{ trans("password_changed_successfully") }}', 'success');
                document.getElementById('changePasswordModal').querySelector('.btn-close').click();
                this.reset();
            } else {
                showNotification(data.message || '{{ trans("password_change_failed") }}', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('{{ trans("password_change_error") }}', 'error');
        });
    });
    
    // 加载活跃会话
    document.getElementById('activeSessionsModal').addEventListener('show.bs.modal', function() {
        loadActiveSessions();
    });
    
    // 请求浏览器通知权限
    if ('Notification' in window && document.getElementById('browserNotifications').checked) {
        if (Notification.permission === 'default') {
            Notification.requestPermission();
        }
    }
});

// 重置表单
function resetForm() {
    document.getElementById('profileForm').reset();
    showNotification('{{ trans("form_reset") }}', 'info');
}

// 切换双因素认证
function toggle2FA() {
    const enabled = {{ user.two_factor_enabled ? 'true' : 'false' }};
    
    if (enabled) {
        if (confirm('{{ trans("confirm_disable_2fa") }}')) {
            fetch('{{ url("profile/disable-2fa") }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    showNotification(data.message || '{{ trans("operation_failed") }}', 'error');
                }
            });
        }
    } else {
        window.location.href = '{{ url("profile/setup-2fa") }}';
    }
}

// 加载活跃会话
function loadActiveSessions() {
    fetch('{{ url("profile/active-sessions") }}')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const container = document.getElementById('sessionsContainer');
                container.innerHTML = data.data.map(session => `
                    <div class="card mb-2">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">${session.device_name || '{{ trans("unknown_device") }}'}</h6>
                                    <p class="mb-1 text-muted">
                                        <i class="bi bi-geo-alt me-1"></i>${session.location || '{{ trans("unknown_location") }}'}
                                    </p>
                                    <small class="text-muted">
                                        <i class="bi bi-clock me-1"></i>${session.last_activity}
                                    </small>
                                    ${session.is_current ? '<span class="badge bg-success ms-2">{{ trans("current_session") }}</span>' : ''}
                                </div>
                                ${!session.is_current ? `
                                    <button class="btn btn-sm btn-outline-danger" onclick="terminateSession('${session.id}')">
                                        {{ trans("terminate") }}
                                    </button>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                `).join('');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('sessionsContainer').innerHTML = '<p class="text-danger">{{ trans("load_sessions_error") }}</p>';
        });
}

// 终止单个会话
function terminateSession(sessionId) {
    if (confirm('{{ trans("confirm_terminate_session") }}')) {
        fetch(`{{ url("profile/terminate-session") }}/${sessionId}`, {
            method: 'DELETE',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                loadActiveSessions();
                showNotification('{{ trans("session_terminated") }}', 'success');
            } else {
                showNotification(data.message || '{{ trans("operation_failed") }}', 'error');
            }
        });
    }
}

// 终止所有其他会话
function terminateAllSessions() {
    if (confirm('{{ trans("confirm_terminate_all_sessions") }}')) {
        fetch('{{ url("profile/terminate-all-sessions") }}', {
            method: 'DELETE',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                loadActiveSessions();
                showNotification('{{ trans("all_sessions_terminated") }}', 'success');
            } else {
                showNotification(data.message || '{{ trans("operation_failed") }}', 'error');
            }
        });
    }
}

// 显示通知
function showNotification(message, type = 'info') {
    // 这里可以集成您的通知系统
    const alertClass = type === 'success' ? 'alert-success' : 
                      type === 'error' ? 'alert-danger' : 
                      type === 'warning' ? 'alert-warning' : 'alert-info';
    
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
    
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}
</script>
{% endblock %}
